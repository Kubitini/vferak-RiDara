@prefix : <http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://www.kosinar.me/ontologies/UnifiedProcessMetaModel> .

<http://www.kosinar.me/ontologies/UnifiedProcessMetaModel> rdf:type owl:Ontology ;
                                                            <http://www.kosinar.me/ontologies/ProcessMetaModel#author> "Michael A. Kosinar" ;
                                                            <http://www.kosinar.me/ontologies/ProcessMetaModel#otherLink> """Kosinar, M.A., 2014, Ph.D. thesis
SPEM
NATURE
Potts
Process Domain Metamodel
AMENITIES
Workflow Management Coalition""" ;
                                                            rdfs:comment "Created in 2014 by Michael A. Kosinar for academic purposes only. All rights reserved."@en ;
                                                            rdfs:isDefinedBy "The Unified (Software) Process Meta-Model define and provide all general purpose terminology base that, combined with formalized knowledge profile, offer consistent terms usable in software process architecture techniques." ;
                                                            rdfs:label "Unified (Software) Process Meta-Model" ;
                                                            owl:backwardCompatibleWith """SPEM
NATURE
Potts
Process Domain Metamodel
AMENITIES
Workflow Management Coalition""" ;
                                                            owl:versionInfo "1.0"^^xsd:string .

#################################################################
#    Annotation properties
#################################################################

###  http://www.kosinar.me/ontologies/ProcessMetaModel#author
<http://www.kosinar.me/ontologies/ProcessMetaModel#author> rdf:type owl:AnnotationProperty .


###  http://www.kosinar.me/ontologies/ProcessMetaModel#otherLink
<http://www.kosinar.me/ontologies/ProcessMetaModel#otherLink> rdf:type owl:AnnotationProperty .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#UML4UPM
:UML4UPM rdf:type owl:AnnotationProperty .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#author
:author rdf:type owl:AnnotationProperty ;
        rdfs:label "Author"@en ;
        rdfs:range xsd:Name ;
        rdfs:domain :Meta_Model .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#otherLink
:otherLink rdf:type owl:AnnotationProperty ;
           rdfs:label "Origin Knowledge Resource Link"@en ;
           rdfs:subPropertyOf :traceableKnowledgeResource .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#rupLink
:rupLink rdf:type owl:AnnotationProperty ;
         rdfs:label "Unified Process Resource Link"@en ;
         rdfs:subPropertyOf :traceableKnowledgeResource .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#swebokLink
:swebokLink rdf:type owl:AnnotationProperty ;
            rdfs:label "Software Engineering Book of Knowledge Resource Link"@en ;
            rdfs:subPropertyOf :traceableKnowledgeResource .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#traceableKnowledgeResource
:traceableKnowledgeResource rdf:type owl:AnnotationProperty ;
                            rdfs:label "Knowledge Area Resource Traceability"@en ;
                            rdfs:range xsd:string ;
                            rdfs:domain :Meta_Model .


###  http://www.w3.org/2000/01/rdf-schema#comment
rdfs:comment rdfs:label "Comment"@en .


###  http://www.w3.org/2000/01/rdf-schema#isDefinedBy
rdfs:isDefinedBy rdfs:label "Definition"@en .


###  http://www.w3.org/2000/01/rdf-schema#label
rdfs:label rdfs:label "Public Label"@en .


###  http://www.w3.org/2000/01/rdf-schema#seeAlso
rdfs:seeAlso rdfs:label "See Also"@en .


###  http://www.w3.org/2002/07/owl#backwardCompatibleWith
owl:backwardCompatibleWith rdfs:label "Backward Compatible With"@en .


###  http://www.w3.org/2002/07/owl#versionInfo
owl:versionInfo rdfs:label "Version"@en .


#################################################################
#    Object Properties
#################################################################

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#checks
:checks rdf:type owl:ObjectProperty ;
        owl:inverseOf :isCheckedBy ;
        rdfs:domain :Competence ;
        rdfs:range [ rdf:type owl:Restriction ;
                     owl:onProperty :checks ;
                     owl:allValuesFrom [ rdf:type owl:Class ;
                                         owl:unionOf ( :Constraint
                                                       :Control
                                                       :Law
                                                     )
                                       ]
                   ] ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        rdfs:comment "Sealed"@en ;
        rdfs:isDefinedBy "Competence Check is a relationship defined between Competence and Constraint – it provides skill control on concrete constraint that further controls or limits process task (e.g. Lawyer skill checks Private Data Protection constraint in Requirements Analysis task). It is possible to overcome the constraint and work with competence only in some occurrences (e.g. C# Programming skill checks Seniority Level constraint in System Architecture task could be replaced with C# Senior Pro-gramming skill specified by Programmer role)."@en ;
        rdfs:label "Checks"@en ;
        rdfs:seeAlso :Competence ,
                     :Constraint ,
                     :isCheckedBy ;
        owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#collaborates
:collaborates rdf:type owl:ObjectProperty ,
                       owl:SymmetricProperty ;
              rdfs:domain [ rdf:type owl:Class ;
                            owl:unionOf ( :Phase
                                          :Process
                                        )
                          ] ;
              rdfs:range [ rdf:type owl:Restriction ;
                           owl:onProperty :collaborates ;
                           owl:allValuesFrom [ rdf:type owl:Class ;
                                               owl:unionOf ( :Phase
                                                             :Process
                                                           )
                                             ]
                         ] ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:isDefinedBy "Collaboration between two processes is a shallow form of information on two cooperative processes – shallow because it is not supposed to hold detailed information about sequential, conditional, or concurrent flows of process parts but rather give external observers general information on whether two processes collaborates, and, if such situation occurs, provide detailed information on cooperation with different relationships (see Is Coordinated With)."@en ;
              rdfs:label "Collaborates"@en ;
              rdfs:seeAlso :Process ,
                           :isCoordinatedWith ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#concretizes
:concretizes rdf:type owl:ObjectProperty ;
             owl:inverseOf :isConcretizedBy ;
             rdfs:domain :Intention ;
             rdfs:range [ rdf:type owl:Restriction ;
                          owl:onProperty :concretizes ;
                          owl:allValuesFrom [ rdf:type owl:Class ;
                                              owl:unionOf ( :Goal
                                                            :Product_Part
                                                            :Work_Product
                                                          )
                                            ]
                        ] ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:isDefinedBy "Concretization of a goal with specific intention provides common tool for keeping convenient information between an intention (more generic term) and its specialization that is nothing else than process goal – while the aforementioned relation is a taxonomic concretization it is also suitable to keep detailed information on goal’s concretization as a separate non-hierarchical relation (as an example we might choose an intention of Iteration Planning that concretizes goal of Requirements Setup that is further realized as Requirements Models)."@en ;
             rdfs:label "Concretizes"@en ;
             rdfs:seeAlso :isConcretizedBy ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#consistsOf
:consistsOf rdf:type owl:ObjectProperty ;
            owl:inverseOf :roleIsIn ;
            rdfs:domain [ rdf:type owl:Class ;
                          owl:unionOf ( :Group
                                        :Team
                                      )
                        ] ;
            rdfs:range [ rdf:type owl:Restriction ;
                         owl:onProperty :consistsOf ;
                         owl:allValuesFrom [ rdf:type owl:Class ;
                                             owl:unionOf ( :Mechanism
                                                           :Process_Role
                                                           :Responsibility
                                                           :Role
                                                         )
                                           ]
                       ] ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:isDefinedBy "Consists Of relationship allows modeling of different roles as parts of bigger structures like Groups or Teams (which are, in this context, equivalent). It is a simple relation of whole-part kind where owner does not keep parts as exclusive; therefore elements may become parts of more different owners."@en ;
            rdfs:label "Consists Of (Role)"@en ;
            rdfs:seeAlso :Group ,
                         :Role ,
                         :roleIsIn ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#contributesTo
:contributesTo rdf:type owl:ObjectProperty ;
               rdfs:domain :Alternative ;
               rdfs:range [ rdf:type owl:Restriction ;
                            owl:onProperty :contributesTo ;
                            owl:allValuesFrom [ rdf:type owl:Class ;
                                                owl:unionOf ( :Process_Step
                                                              :Work_Definition
                                                              :Work_Unit
                                                            )
                                              ]
                          ] ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:isDefinedBy "Contribution of Alternative to Process Step is a fundamental relationship of Issue-mitigation base that provides detailed information on which Alternative contributes to Process Step. Be aware that Alternative is actually equivalent to Process Step, consequently this relation can be understood as a sort of cooperation relation between two process steps but the separation of Alternative from Process Step and this relation allows convenient capture of issue-mitigation cooperation without further complications caused by overloading cooperation relationships."@en ;
               rdfs:label "Contributes To"@en ;
               rdfs:seeAlso :Alternative ,
                            :Process_Step ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#controls
:controls rdf:type owl:ObjectProperty ;
          owl:equivalentProperty :limits ,
                                 :restricts ;
          owl:inverseOf :isControlledBy ;
          rdfs:domain [ rdf:type owl:Class ;
                        owl:unionOf ( :Constraint
                                      :Control
                                      :Law
                                    )
                      ] ;
          rdfs:range :Task ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Control relation is a mechanism designed for modeling constraints and limitations applied on tasks; it is the last piece of the Competence trinity of UPMM that consists of Competence, Constraint, and Role and their respective relationships – as a conclusion, Control relationship, provide mighty weapon for limiting specific tasks that have to be kept under control (mostly regulation based tasks)."@en ;
          rdfs:label "Controls"@en ;
          rdfs:seeAlso :Constraint ,
                       :Task ,
                       :limits ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#decides
:decides rdf:type owl:ObjectProperty ;
         rdfs:domain :Process_Step ;
         rdfs:range :Alternative ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:isDefinedBy "Decision is a relationship between process step and alternative that must be decided as a response to raised issue. Decision made by process step is not enough to support full selection of Alternative to the executed process nonetheless – it is also dependent on a selection of alternative made by responsible role."@en ;
         rdfs:label "Decides"@en ;
         rdfs:seeAlso :Alternative ,
                      :Process_Step ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#demands
:demands rdf:type owl:ObjectProperty ;
         owl:equivalentProperty :realizes ;
         owl:inverseOf :isRealizedBy ;
         rdfs:domain :Process ;
         rdfs:range :Goal ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:isDefinedBy "Demand of process on certain goal realization is a relationship that enables modeling of goals role in processes. Since Goal (and Intention) lies in Context Base set this relation gives a context support to process and offers additional concretization of goal as a mid-link in chain of Entity (specific goal transformed in task), Intention (most abstract goal-like term), and Process (most general view on activities that intends to realize the goal)."@en ;
         rdfs:label "Demands"@en ;
         rdfs:seeAlso :Goal ,
                      :Process ,
                      :realizes ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#executes
:executes rdf:type owl:ObjectProperty ;
          owl:inverseOf :isBuildOn ;
          rdfs:domain :Context ;
          rdfs:range :Process_Step ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Execution of process step in a given context is a relationship that gives process analysts potent modeling means that allows differentiation of various scopes that might affect view on executed process. Nice feature of the Context in UPMM is that it can stand for Organization or Organization Unit and therefore help analysts with capturing different nuances of tasks in context-based environment – this is convenient mostly in environments that are critical for nice and clear process realization and yet are complex or complicated (imagine Requirements Modeling tasks executed at stakeholder’s place within healthcare information system projects that would actually require certain activities performed in hospitals)."@en ;
          rdfs:label "Executes"@en ;
          rdfs:seeAlso :Context ,
                       :Process_Step ,
                       :isBuildOn ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#has
:has rdf:type owl:ObjectProperty ;
     rdfs:domain [ owl:intersectionOf ( [ rdf:type owl:Class ;
                                          owl:unionOf ( :Object
                                                        [ rdf:type owl:Class ;
                                                          owl:complementOf :Process_Step
                                                        ]
                                                      )
                                        ]
                                        [ rdf:type owl:Class ;
                                          owl:unionOf ( :Process_Step
                                                        [ rdf:type owl:Class ;
                                                          owl:complementOf :Object
                                                        ]
                                                      )
                                        ]
                                      ) ;
                   rdf:type owl:Class
                 ] ;
     rdfs:range [ rdf:type owl:Restriction ;
                  owl:onProperty :has ;
                  owl:allValuesFrom :Parameter
                ] ;
     :author "Michael A. Kosinar"^^xsd:Name ;
     rdfs:comment "Sealed"@en ;
     rdfs:isDefinedBy "Parameterization is a customization tool that allows simple and yet powerful extension of the most abstract elements of Core Base and Structural Base, i.e. Object and Process Step – this customization approach is based on flexible dynamic properties analytical pattern that provides properties as generic concepts that can be (re)defined for different purposes (let’s take as an example a missing process metric that should define difficulty and range numeric values in 0-100 interval)."@en ;
     rdfs:label "Has"@en ;
     rdfs:seeAlso :Object ,
                  :Parameter ,
                  :Process_Step ;
     owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasInput
:hasInput rdf:type owl:ObjectProperty ;
          rdfs:subPropertyOf :transforms ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "Has Input"@en ;
          rdfs:seeAlso :transforms ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasMandatoryInput
:hasMandatoryInput rdf:type owl:ObjectProperty ;
                   rdfs:subPropertyOf :hasInput ;
                   :author "Michael A. Kosinar"^^xsd:Name ;
                   rdfs:comment "Sealed"@en ;
                   rdfs:label "Has Mandatory Input"@en ;
                   rdfs:seeAlso :transforms ;
                   owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasOptionalInput
:hasOptionalInput rdf:type owl:ObjectProperty ;
                  rdfs:subPropertyOf :hasInput ;
                  :author "Michael A. Kosinar"^^xsd:Name ;
                  rdfs:comment "Sealed"@en ;
                  rdfs:label "Has Optional Input"@en ;
                  rdfs:seeAlso :transforms ;
                  owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasOutput
:hasOutput rdf:type owl:ObjectProperty ;
           rdfs:subPropertyOf :transforms ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Has Output"@en ;
           rdfs:seeAlso :transforms ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasResponse
:hasResponse rdf:type owl:ObjectProperty ;
             owl:inverseOf :respondsTo ;
             rdfs:domain :Issue ;
             rdfs:range :Alternative ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:label "Has Response"@en ;
             rdfs:seeAlso :respondsTo ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasResponsibleRole
:hasResponsibleRole rdf:type owl:ObjectProperty ;
                    owl:inverseOf :responsibleFor ;
                    rdfs:domain :Object ;
                    rdfs:range :Role ;
                    :author "Michael A. Kosinar"^^xsd:Name ;
                    rdfs:comment "Sealed"@en ;
                    rdfs:label "Has Responsible Role"@en ;
                    rdfs:seeAlso :responsibleFor ;
                    owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasResult
:hasResult rdf:type owl:ObjectProperty ;
           owl:inverseOf :resultsIn ;
           rdfs:domain :Goal ;
           rdfs:range :Entity ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Has Result"@en ;
           rdfs:seeAlso :resultsIn ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasSource
:hasSource rdf:type owl:ObjectProperty ;
           rdfs:domain :Process_Step ;
           rdfs:range :Intention ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Source and Target intentions of process steps help in abstract modeling of opening and closing intentions – in other words, process practitioners can use means of source intentions to set up abstract goals that motivate process step to happen in given context and target intentions to model required abstract goals that should be accomplished in the end of process step execution. Noticeable fact is that both source and target intentions might be actually defined as identical when conveniently documented – take Functional Requirements Setup performed in Hospital context as an example."@en ;
           rdfs:label "Has Source"@en ;
           rdfs:seeAlso :Intention ,
                        :Process_Step ,
                        :hasTarget ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasSourceStep
:hasSourceStep rdf:type owl:ObjectProperty ;
               rdfs:subPropertyOf :isCoordinatedWith ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Has Source Step"@en ;
               rdfs:seeAlso :isCoordinatedWith ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasStep
:hasStep rdf:type owl:ObjectProperty ;
         rdfs:domain :Task ;
         rdfs:range [ rdf:type owl:Restriction ;
                      owl:onProperty :hasStep ;
                      owl:allValuesFrom [ owl:intersectionOf ( [ rdf:type owl:Class ;
                                                                 owl:unionOf ( :Action
                                                                               :Activity
                                                                               :Alternative
                                                                               :Function
                                                                               :Task
                                                                               :step
                                                                             )
                                                               ]
                                                               [ rdf:type owl:Restriction ;
                                                                 owl:onProperty :isAtomicStep ;
                                                                 owl:hasValue "true"^^xsd:boolean
                                                               ]
                                                             ) ;
                                          rdf:type owl:Class
                                        ]
                    ] ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:isDefinedBy "Sub-steps are atomic tasks that were captured as most specific activities into which are non-atomic tasks further refined – membership of atomic tasks in parent task is defined with non-exclusive whole-part relation and enables really detailed process modeling up to the use-case like steps granularity. This approach is convenient mostly for capturing reference processes since such in-depth process capture would be time consuming and difficult."@en ;
         rdfs:label "Has Sub-Step"^^xsd:string ;
         rdfs:seeAlso :Task ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasSubContext
:hasSubContext rdf:type owl:ObjectProperty ;
               rdfs:domain :Context ;
               rdfs:range [ rdf:type owl:Restriction ;
                            owl:onProperty :hasSubContext ;
                            owl:allValuesFrom [ rdf:type owl:Class ;
                                                owl:unionOf ( :Context
                                                              :Organization
                                                              :Scope
                                                            )
                                              ]
                          ] ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:isDefinedBy "Sub-context membership in a parent context is yet another whole-part relationship used in UPMM, this time with the element of Context (or Organization) in one-on-one non-exclusive relation that provides modeling of hierarchical contextual units – e.g. hospital has sub-context of traumatology. As the example clearly presents, sub-context modeling can be used to capture simple organizational units."@en ;
               rdfs:label "Has Sub-Context"@en ;
               rdfs:seeAlso :Context ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasTarget
:hasTarget rdf:type owl:ObjectProperty ;
           rdfs:domain :Process_Step ;
           rdfs:range :Intention ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Source and Target intentions of process steps help in abstract modeling of opening and closing intentions – in other words, process practitioners can use means of source intentions to set up abstract goals that motivate process step to happen in given context and target intentions to model required abstract goals that should be accomplished in the end of process step execution. Noticeable fact is that both source and target intentions might be actually defined as identical when conveniently documented – take Functional Requirements Setup performed in Hospital context as an example."@en ;
           rdfs:label "Has Target"@en ;
           rdfs:seeAlso :Intention ,
                        :Process_Step ,
                        :hasSource ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#hasTargetStep
:hasTargetStep rdf:type owl:ObjectProperty ;
               rdfs:subPropertyOf :isCoordinatedWith ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Has Target Step"@en ;
               rdfs:seeAlso :isCoordinatedWith ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#interactsWith
:interactsWith rdf:type owl:ObjectProperty ,
                        owl:SymmetricProperty ;
               rdfs:domain :Entity ;
               rdfs:range :Entity ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:isDefinedBy "Interaction is, just like in the case of process collaboration, shallow form of information about two entities interacting in order to achieve certain goal. This form of symmetric relationship between two entities is not as critical as, let’s say, transformation relations between tasks and entities, nonetheless it is still a good source of knowledge for process observers."@en ;
               rdfs:label "Interacts With"@en ;
               rdfs:seeAlso :Entity ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#interrupts
:interrupts rdf:type owl:ObjectProperty ;
            rdfs:subPropertyOf :isCoordinatedWith ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:label "Interrupts"@en ;
            rdfs:seeAlso :isCoordinatedWith ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isActivatedBy
:isActivatedBy rdf:type owl:ObjectProperty ;
               owl:inverseOf :receiveSignal ;
               rdfs:domain [ owl:intersectionOf ( :Process_Step
                                                  [ rdf:type owl:Class ;
                                                    owl:complementOf :Event
                                                  ]
                                                ) ;
                             rdf:type owl:Class
                           ] ;
               rdfs:range :Event ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Is Activated By"@en ;
               rdfs:seeAlso :isFiredBy ,
                            :receiveSignal ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isBuildOn
:isBuildOn rdf:type owl:ObjectProperty ;
           rdfs:domain :Process_Step ;
           rdfs:range :Context ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Is Built Upon"@en ;
           rdfs:seeAlso :Context ,
                        :Process_Step ,
                        :executes ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isCheckedBy
:isCheckedBy rdf:type owl:ObjectProperty ;
             rdfs:domain [ rdf:type owl:Class ;
                           owl:unionOf ( :Constraint
                                         :Control
                                         :Law
                                       )
                         ] ;
             rdfs:range :Competence ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:label "Is Checked By"@en ;
             rdfs:seeAlso :checks ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isConcretizedBy
:isConcretizedBy rdf:type owl:ObjectProperty ;
                 rdfs:domain [ rdf:type owl:Class ;
                               owl:unionOf ( :Goal
                                             :Product_Part
                                             :Work_Product
                                           )
                             ] ;
                 rdfs:range :Intention ;
                 :author "Michael A. Kosinar"^^xsd:Name ;
                 rdfs:comment "Sealed"@en ;
                 rdfs:label "Is Concretized By"@en ;
                 rdfs:seeAlso :concretizes ;
                 owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isControlledBy
:isControlledBy rdf:type owl:ObjectProperty ;
                rdfs:domain :Task ;
                rdfs:range [ rdf:type owl:Restriction ;
                             owl:onProperty :isControlledBy ;
                             owl:allValuesFrom [ rdf:type owl:Class ;
                                                 owl:unionOf ( :Constraint
                                                               :Control
                                                               :Law
                                                             )
                                               ]
                           ] ;
                :author "Michael A. Kosinar"^^xsd:Name ;
                rdfs:comment "Sealed"@en ;
                rdfs:label "Is Controlled By"@en ;
                rdfs:seeAlso :controls ;
                owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isCoordinatedWith
:isCoordinatedWith rdf:type owl:ObjectProperty ;
                   rdfs:domain :Cooperation ;
                   rdfs:range [ rdf:type owl:Restriction ;
                                owl:onProperty :isCoordinatedWith ;
                                owl:allValuesFrom [ rdf:type owl:Class ;
                                                    owl:unionOf ( :Process_Step
                                                                  :Work_Definition
                                                                  :Work_Unit
                                                                )
                                                  ]
                              ] ;
                   :author "Michael A. Kosinar"^^xsd:Name ;
                   rdfs:comment "Sealed"@en ;
                   rdfs:isDefinedBy "Mutual Coordination of two process steps might be the most critical relationship of whole UPMM since it provides common tools for capturing and modeling behavioral aspects of coordinated steps – these aspects between two process steps can be sequential (one step is followed or preceded by another) or concurrent (two steps are parallel with each other). There are also special occurrences of coordination related to utilization of event-driven aspects like the ability of event or task interrupting another process step. Coordination can be modeled with two separate and independent approaches – while one is more natural and intuitive in a sense of process observation and defines the cooperation as a direct relation between two process steps, another uses a middle element as a link between process steps and require two cooperation role instances to create complete behavioral model – source and target process steps mapped onto specific coordination. The second approach is meant to be used as the ‘visual models friendly’ specification of coordination and acts like arcs used in visual languages between two model elements."@en ;
                   rdfs:label "Is Coordinated With"@en ;
                   rdfs:seeAlso :Process_Step ,
                                :hasSourceStep ,
                                :hasTargetStep ,
                                :interrupts ,
                                :isFollowedBy ,
                                :isParallelWith ,
                                :precedes ;
                   owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isFiredBy
:isFiredBy rdf:type owl:ObjectProperty ;
           owl:equivalentProperty :receiveSignal ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Fires"@en ;
           rdfs:seeAlso :receiveSignal ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isFollowedBy
:isFollowedBy rdf:type owl:ObjectProperty ;
              rdfs:subPropertyOf :isCoordinatedWith ;
              owl:inverseOf :precedes ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Is Followed By"@en ;
              rdfs:seeAlso :isCoordinatedWith ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isInContext
:isInContext rdf:type owl:ObjectProperty ;
             owl:equivalentProperty :isInScope ;
             owl:inverseOf :scopes ;
             rdfs:domain :Object ;
             rdfs:range [ rdf:type owl:Restriction ;
                          owl:onProperty :isInContext ;
                          owl:allValuesFrom [ rdf:type owl:Class ;
                                              owl:unionOf ( :Context
                                                            :Organization
                                                            :Scope
                                                          )
                                            ]
                        ] ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:label "Is In Context"@en ;
             rdfs:seeAlso :scopes ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isInScope
:isInScope rdf:type owl:ObjectProperty ;
           owl:inverseOf :scopes ;
           rdfs:domain :Object ;
           rdfs:range [ rdf:type owl:Restriction ;
                        owl:onProperty :isInScope ;
                        owl:allValuesFrom [ rdf:type owl:Class ;
                                            owl:unionOf ( :Context
                                                          :Organization
                                                          :Scope
                                                        )
                                          ]
                      ] ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Is In Scope Of"@en ;
           rdfs:seeAlso :scopes ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isOrganizedWith
:isOrganizedWith rdf:type owl:ObjectProperty ,
                          owl:SymmetricProperty ,
                          owl:ReflexiveProperty ;
                 rdfs:domain :Human_Resource ;
                 rdfs:range :Human_Resource ;
                 :author "Michael A. Kosinar"^^xsd:Name ;
                 rdfs:isDefinedBy "Organization of two human resources collects and holds information about mutual cooperation of different actors involved within process execution. There is quite a similarity with other relationships including entities interaction and process collaboration. Process observers are recommended to use this relationship (just like human resource modeling) only in very stable process environment with minimal fluctuation that would cause regular changes in explicit process models."@en ;
                 rdfs:label "Is Organized With"@en ;
                 rdfs:seeAlso :Human_Resource ,
                              :collaborates ,
                              :interactsWith ;
                 owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isParallelWith
:isParallelWith rdf:type owl:ObjectProperty ;
                rdfs:subPropertyOf :isCoordinatedWith ;
                rdf:type owl:SymmetricProperty ;
                :author "Michael A. Kosinar"^^xsd:Name ;
                rdfs:comment "Sealed"@en ;
                rdfs:label "Is Parallel With"@en ;
                rdfs:seeAlso :isCoordinatedWith ;
                owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isPerformedBy
:isPerformedBy rdf:type owl:ObjectProperty ;
               owl:inverseOf :performs ;
               rdfs:domain :Task ;
               rdfs:range [ rdf:type owl:Restriction ;
                            owl:onProperty :isPerformedBy ;
                            owl:allValuesFrom [ rdf:type owl:Class ;
                                                owl:unionOf ( :Mechanism
                                                              :Process_Role
                                                              :Role
                                                            )
                                              ]
                          ] ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Is Performed By"^^xsd:string ;
               rdfs:seeAlso :performs ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isPlayedBy
:isPlayedBy rdf:type owl:ObjectProperty ;
            owl:inverseOf :plays ;
            rdfs:domain :Role ;
            rdfs:range :Resource ;
            :author "Michael A. Kosinar"@en ;
            rdfs:comment "Sealed"@en ;
            rdfs:label "Is Played By"@en ;
            rdfs:seeAlso :plays ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isProcessedBy
:isProcessedBy rdf:type owl:ObjectProperty ;
               owl:inverseOf :processes ;
               rdfs:domain :Entity ;
               rdfs:range [ rdf:type owl:Restriction ;
                            owl:onProperty :isProcessedBy ;
                            owl:allValuesFrom :Resource
                          ] ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Is Processed By"@en ;
               rdfs:seeAlso :processes ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isProcessedIn
:isProcessedIn rdf:type owl:ObjectProperty ;
               owl:inverseOf :transforms ;
               rdfs:domain :Entity ;
               rdfs:range [ rdf:type owl:Restriction ;
                            owl:onProperty :isProcessedIn ;
                            owl:allValuesFrom :Task
                          ] ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Is Processed In"@en ;
               rdfs:seeAlso :transforms ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isProvidedBy
:isProvidedBy rdf:type owl:ObjectProperty ;
              owl:inverseOf :provides ;
              rdfs:domain :Competence ;
              rdfs:range :Resource ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Is Provided By"@en ;
              rdfs:seeAlso :provides ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isRaisedBy
:isRaisedBy rdf:type owl:ObjectProperty ;
            owl:inverseOf :raises ;
            rdfs:domain :Issue ;
            rdfs:range :Process_Step ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:label "Is Raised By"@en ;
            rdfs:seeAlso :raises ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isRealizedBy
:isRealizedBy rdf:type owl:ObjectProperty ;
              owl:inverseOf :realizes ;
              rdfs:domain :Goal ;
              rdfs:range :Process ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Is Realized By"@en ;
              rdfs:seeAlso :demands ,
                           :realizes ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isReviewedBy
:isReviewedBy rdf:type owl:ObjectProperty ;
              owl:inverseOf :reviews ;
              rdfs:domain :Entity ;
              rdfs:range :Issue ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Is Reviewed By"@en ;
              rdfs:seeAlso :reviews ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isSatisfiedBy
:isSatisfiedBy rdf:type owl:ObjectProperty ;
               owl:inverseOf :satisfies ;
               rdfs:domain :Intention ;
               rdfs:range :Context ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Is Satisfied By"@en ;
               rdfs:seeAlso :satisfies ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isSelectedBy
:isSelectedBy rdf:type owl:ObjectProperty ;
              owl:inverseOf :selects ;
              rdfs:domain :Alternative ;
              rdfs:range :Role ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Is Selected By"@en ;
              rdfs:seeAlso :selects ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isSpecifiedBy
:isSpecifiedBy rdf:type owl:ObjectProperty ;
               owl:inverseOf :specifies ;
               rdfs:domain :Competence ;
               rdfs:range :Role ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:label "Is Specified By"@en ;
               rdfs:seeAlso :specifies ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#limits
:limits rdf:type owl:ObjectProperty ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        rdfs:comment "Sealed"@en ;
        rdfs:label "Limits"@en ;
        rdfs:seeAlso :controls ;
        owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#modifiedBy
:modifiedBy rdf:type owl:ObjectProperty ;
            owl:inverseOf :modifies ;
            rdfs:domain :Artifact ;
            rdfs:range :Role ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"^^xsd:Name ;
            rdfs:label "Modified By"@en ;
            rdfs:seeAlso :modifies ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#modifies
:modifies rdf:type owl:ObjectProperty ;
          rdfs:domain :Role ;
          rdfs:range :Entity ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Modification is a relationship that concretizes mutual relation between responsible role and an entity that is modified by a resource that plays the role in the current process context. This relationship meets modeling criteria of RUP and must not be confused with the responsibility of a role for certain objects in process realization."@en ;
          rdfs:label "Modifies"@en ;
          rdfs:seeAlso :Entity ,
                       :Role ,
                       :modifiedBy ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#objectsTo
:objectsTo rdf:type owl:ObjectProperty ;
           rdfs:domain :Argument ;
           rdfs:range :Alternative ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Argumentation is an analytical modeling tool within the Issue-mitigation Base of UPMM and provides means for capturing reasons that can be used to support an alternative or object it. This relationship is mainly managerial tool utilized as a process control in problematic situations – its power lies in modeling historical arguments that were used before as solutions."@en ;
           rdfs:label "Objects To"@en ;
           rdfs:seeAlso :Alternative ,
                        :Argument ,
                        :supports ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#parentProcess
:parentProcess rdf:type owl:ObjectProperty ;
               rdfs:domain :Process ;
               rdfs:range [ rdf:type owl:Restriction ;
                            owl:onProperty :parentProcess ;
                            owl:allValuesFrom :Process_Step
                          ] ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:isDefinedBy "Parent Process is a relationship that allows whole-part modeling between high-level processes and process steps that are owned by them. Just like other whole-part relations designed in UPMM, even this one doesn’t implement exclusive ownership due to practical reasons of process steps reusability in different processes. Notice a fact that part of a process could also be an atomic task – see has sub-step relation for more details and differences."@en ;
               rdfs:label "Parent Process"@en ;
               rdfs:seeAlso :Process ,
                            :Process_Step ,
                            :hasStep ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#partiallyConsistsOf
:partiallyConsistsOf rdf:type owl:ObjectProperty ;
                     rdfs:domain :Artifact ;
                     rdfs:range :Entity ;
                     :author "Michael A. Kosinar"^^xsd:Name ;
                     rdfs:comment "Sealed"@en ;
                     rdfs:isDefinedBy "Partial Consisting is a relationship that provides structural modeling of artifacts and entities – process analysts can approach entities entering and exiting process tasks as structured objects of whole-part kind – this relation is based on composite design pattern but it doesn’t own parts exclusively like the mentioned design pattern. A typical example of artifact consisting of another entities would be a use-case model artifact (i.e. its descriptor on software process level) that consists of different parts such as actors, use cases, and relationships – all parts can be modeled as separate and independent and connected to the whole with the relationship of partial consisting when the need to capture this reality occurs."@en ;
                     rdfs:label "Partially Consists Of"@en ;
                     rdfs:seeAlso :Artifact ,
                                  :Entity ;
                     owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#performs
:performs rdf:type owl:ObjectProperty ;
          rdfs:domain :Role ;
          rdfs:range :Task ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Performance of task is a relationship between responsible roles and concrete tasks that are performed by resources that currently play specific roles in process execution. Just like the mutual process step cooperation stands in front of behavioral modeling, performance relationship plays significant role in responsibility modeling together with competence and constraint capture and allows process practitioners and observers to stay informed on the current status of process related liabilities."@en ;
          rdfs:label "Performs"@en ;
          rdfs:seeAlso :Role ,
                       :Task ,
                       :isPerformedBy ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#plays
:plays rdf:type owl:ObjectProperty ;
       rdfs:domain :Resource ;
       rdfs:range :Role ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       rdfs:comment "Sealed"@en ;
       rdfs:isDefinedBy "Role-playing is a relationship between general resource and responsible role – it gives process analysts a tool to specify roles of available resources. This relation is essential in modeling process details dependent on high responsible roles that must be played by competent resources – in such situation, the triad resource-competence-role comes to play along with respective relationships including this one."@en ;
       rdfs:label "Plays"@en ;
       rdfs:seeAlso :Resource ,
                    :Role ,
                    :isPlayedBy ;
       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#precedes
:precedes rdf:type owl:ObjectProperty ;
          rdfs:subPropertyOf :isCoordinatedWith ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment :isCoordinatedWith ,
                       "Sealed"@en ;
          rdfs:label "Is Preceded By"@en ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#processes
:processes rdf:type owl:ObjectProperty ;
           rdfs:domain :Resource ;
           rdfs:range :Entity ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Processing of entities is a modeling approach that offers an intuitive technique for capturing simple facts about certain entities being processed by various resources in captured process model. Once again, just like in the case of human resources organization, the processing relationship should be mainly used in stable process structures that guarantee minimum of changes in time."@en ;
           rdfs:label "Processes"@en ;
           rdfs:seeAlso :Entity ,
                        :Resource ,
                        :isProcessedBy ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#provides
:provides rdf:type owl:ObjectProperty ;
          rdfs:domain :Resource ;
          rdfs:range :Competence ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Competence provisioning is yet another piece in the puzzle of responsibility-competence modeling – it fits into the triple of concepts resource-role-competence along with role-playing and competence specification relationships. This relation provides modeling of resources providing specific competences captured within an organization."@en ;
          rdfs:label "Provides"@en ;
          rdfs:seeAlso :Competence ,
                       :Resource ,
                       :isProvidedBy ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#raises
:raises rdf:type owl:ObjectProperty ;
        rdfs:domain :Process_Step ;
        rdfs:range :Issue ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        rdfs:comment "Sealed"@en ;
        rdfs:isDefinedBy "Raise of an issue is a special kind of behavioral relationship that allows process steps to cause an event-driven problem (issue is, to some extent, equivalent with event) – while this approach could be bypassed with the couple event-process step it is more convenient to distinguish between classic event modeling and actual issue capture. Requirements modeling bears many examples of issue modeling – take conflicted requirements as one – keeping such problem as an event (maybe enriched with special data property slot identifying issue-like event) may lead to certain misunderstandings of the issue concept and also requires extra check on event’s data properties whether we even talk about issue or not. Neither UPMM nor UPM force process analysts to model event-driven issues with this separate concept and relationship but they are strongly recommended to do so."@en ;
        rdfs:label "Raises"@en ;
        rdfs:seeAlso :Issue ,
                     :Process_Step ,
                     :isRaisedBy ;
        owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#realizes
:realizes rdf:type owl:ObjectProperty ;
          rdfs:domain :Process ;
          rdfs:range :Goal ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "Realizes"@en ;
          rdfs:seeAlso :demands ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#receiveSignal
:receiveSignal rdf:type owl:ObjectProperty ;
               rdfs:domain :Event ;
               rdfs:range [ rdf:type owl:Restriction ;
                            owl:onProperty :receiveSignal ;
                            owl:allValuesFrom [ owl:intersectionOf ( :Process_Step
                                                                     [ rdf:type owl:Class ;
                                                                       owl:complementOf :Event
                                                                     ]
                                                                   ) ;
                                                rdf:type owl:Class
                                              ]
                          ] ;
               :author "Michael A. Kosinar"^^xsd:Name ;
               rdfs:comment "Sealed"@en ;
               rdfs:isDefinedBy "Activation is a basic relationship between events and process steps – it allows activation of a process step with event that occurs within process execution. By event we mean mostly real world events (e.g. incoming mail, finalized documentation, etc.) but system events are supported by the definition as well (e.g. process simulation finished, incoming e-mail, server failure, etc.). It is crucial to realize that events in the UPMM context should behave exactly like those in ARIS (EPC’s events) or Petri Nets process equivalents (Petri Net transition) – they shouldn’t consume any resources and their limit of time consumption is near zero."@en ;
               rdfs:label "Activates"@en ;
               rdfs:seeAlso :Event ,
                            :Process_Step ,
                            :isFiredBy ;
               owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#respondsTo
:respondsTo rdf:type owl:ObjectProperty ;
            rdfs:domain :Alternative ;
            rdfs:range :Issue ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:isDefinedBy "Response of an alternative to particularly raised issue is a relationship that offers process analysts another behavioral modeling technique, however in this case it has a special semantics compared to, for example, task reacting on an event – just like the raise of issue, this relation is recommended to be used in modeling of exceptional states prior to utilization of events and tasks."@en ;
            rdfs:label "Responds To"@en ;
            rdfs:seeAlso :Alternative ,
                         :Issue ,
                         :hasResponse ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#responsibleFor
:responsibleFor rdf:type owl:ObjectProperty ;
                rdfs:domain :Role ;
                rdfs:range [ rdf:type owl:Restriction ;
                             owl:onProperty :responsibleFor ;
                             owl:allValuesFrom :Object
                           ] ;
                :author "Michael A. Kosinar"^^xsd:Name ;
                rdfs:comment "Sealed"@en ;
                rdfs:isDefinedBy "Role Responsibility for certain objects is a relationship that provides liability modeling between roles and all specializations of objects – in standard UPMM resources and entities. This relation is compliant with RUP reference guide that utilizes responsibility for work products realized within tasks and processes – approach customized within UPMM generalize the relation up to abstract object because of two reasons – entity results in process goals (work products; therefore RUP responsibility is covered) and typical process architectures also require additional responsibility modeling between roles and resources (connection of the relation to object rather than entity or goal allows to capture responsibility for resources)."@en ;
                rdfs:label "Responsible For"@en ;
                rdfs:seeAlso :Object ,
                             :Role ,
                             :hasResponsibleRole ;
                owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#restricts
:restricts rdf:type owl:ObjectProperty ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Restricts"@en ;
           rdfs:seeAlso :controls ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#resultsIn
:resultsIn rdf:type owl:ObjectProperty ;
           rdfs:domain :Entity ;
           rdfs:range :Goal ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Resulting entity relationship is a way how to specify what entity is a result of certain process goals – it has its justification in more abstract context oriented modeling of goals and intentions that might require, in certain point of process architecture, a concretization of what is the exact outcome of the intention and its goals in relation with process itself (e.g. requirements process has an intention to capture requirements with one goal that aim for capturing of functional require-ments – a result of this goal could be a use-case model)."@en ;
           rdfs:label "Results In"@en ;
           rdfs:seeAlso :Entity ,
                        :Goal ,
                        :hasResult ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#reviews
:reviews rdf:type owl:ObjectProperty ;
         rdfs:domain :Issue ;
         rdfs:range :Entity ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:isDefinedBy "Review is a relation between issue and entity – it provides a general connection between Issue-mitigation Base and Structural Base in a sense of giving issues the ability to request a review of an entity when such a need occurs. Its utilization in common practice is not that frequent but issues are typically related to behavioral aspects and lack a possible linking with structural aspects that also play significant role in various problem solutions (e.g. conflicting requirements should review requirement models)."@en ;
         rdfs:label "Reviews"@en ;
         rdfs:seeAlso :Entity ,
                      :Issue ,
                      :isReviewedBy ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#roleIsIn
:roleIsIn rdf:type owl:ObjectProperty ;
          rdfs:domain [ rdf:type owl:Class ;
                        owl:unionOf ( :Mechanism
                                      :Process_Role
                                      :Responsibility
                                      :Role
                                    )
                      ] ;
          rdfs:range [ rdf:type owl:Restriction ;
                       owl:onProperty :roleIsIn ;
                       owl:allValuesFrom [ rdf:type owl:Class ;
                                           owl:unionOf ( :Group
                                                         :Team
                                                       )
                                         ]
                     ] ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "(Role) Is In (Group)"@en ;
          rdfs:seeAlso :consistsOf ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#satisfies
:satisfies rdf:type owl:ObjectProperty ;
           rdfs:domain :Context ;
           rdfs:range :Intention ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Satisfaction is an essential context oriented relationship primarily designed to capture and model direct relations between context (process scope) and process intentions – just like intention concretizes various process goals, process scope, analogically, concretizes intentions that are satisfied within organization."@en ;
           rdfs:label "Satisfies"@en ;
           rdfs:seeAlso :Context ,
                        :Intention ,
                        :isSatisfiedBy ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#scopes
:scopes rdf:type owl:ObjectProperty ;
        rdfs:domain [ rdf:type owl:Class ;
                      owl:unionOf ( :Context
                                    :Organization
                                    :Scope
                                  )
                    ] ;
        rdfs:range :Object ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        rdfs:comment "Sealed"@en ;
        rdfs:isDefinedBy "Scoping of various objects in a given context allows process analysts to insert entities or resources into concrete organization, organizational unit, context or scope to identify where interests and intentions lie for specified objects and their specializations (remember that two predefined specializations – Entity and Resource – are not limiting the UPMM and analysts are free to extend Structural Base of UPMM upon their own needs). Let’s present, as an example, a Software Architecture Document that might have been scoped in Requirements or Analysis domains and process analyst decided to move the document into the Requirements context in order to emphasize the importance of this artifact in the Requirements phase."@en ;
        rdfs:label "Scopes"@en ;
        rdfs:seeAlso :Context ,
                     :Object ,
                     :isInContext ,
                     :isInScope ;
        owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#selects
:selects rdf:type owl:ObjectProperty ;
         rdfs:domain :Role ;
         rdfs:range :Alternative ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:isDefinedBy "Selection of alternatives is in UPMM realized as a relationship between responsible role and alternative and this set as a whole provides second control mechanism over the Issue-mitigation Base that would be, without this relation, left with only one – a process step’s decision on alternative. It is not critical to use both of these control mechanisms whilst the first one, process step decision, is strong enough to secure the selection but there are cases where such technique might fail and that’s the moment the role’s selection commence as a safety guard to secure the selection (imagine an alternative that would require double of the original budget – while the Change Request process might decide to use this alternative, Director role may select different proposal)."@en ;
         rdfs:label "Selects"@en ;
         rdfs:seeAlso :Alternative ,
                      :Role ,
                      :isSelectedBy ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#sendSignal
:sendSignal rdf:type owl:ObjectProperty ;
            owl:equivalentProperty :triggers ;
            rdfs:domain :Process_Step ;
            rdfs:range :Event ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:label "Send Signal To"@en ;
            rdfs:seeAlso :triggers ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#specifies
:specifies rdf:type owl:ObjectProperty ;
           rdfs:domain :Role ;
           rdfs:range :Competence ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Specification of a competence by responsible role is a relationship that realizes roles and skillsets connections – process analysts should use this relation to define required or recommended skills of various roles participating the process. Examples might range from the most obvious ones like Lawyer role specifies European Business Law skillset to less apparent like Business Analyst role should specify Critical Infrastructure Law."@en ;
           rdfs:label "Specifies"@en ;
           rdfs:seeAlso :Competence ,
                        :Role ,
                        :isSpecifiedBy ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#supports
:supports rdf:type owl:ObjectProperty ;
          rdfs:domain :Argument ;
          rdfs:range :Alternative ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment :Alternative ,
                       :Argument ,
                       :objectsTo ,
                       "Sealed"@en ;
          rdfs:isDefinedBy "Argumentation is an analytical modeling tool within the Issue-mitigation Base of UPMM and provides means for capturing reasons that can be used to support an alternative or object it. This relationship is mainly managerial tool utilized as a process control in problematic situations – its power lies in modeling historical arguments that were used before as solutions."@en ;
          rdfs:label "Supports"@en ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#transforms
:transforms rdf:type owl:ObjectProperty ;
            rdfs:domain :Task ;
            rdfs:range :Entity ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:isDefinedBy "Transformation is yet another very critical relationship that exists in UPMM and holds information about what entity is changed within certain tasks of process model – we can clearly see that this approach is adopted from functional perspective of business process architecture and drives full focus on three specific modeling means that provide modeling of mandatory and optional inputs (i.e. entities entering tasks), and modeling outputs (i.e. entities exiting tasks) – this distinction, above all, provides full scale tooling for modeling entities transformed within tasks as required by functional modeling criteria."@en ;
            rdfs:label "Transforms"@en ;
            rdfs:seeAlso :Entity ,
                         :Task ,
                         :isProcessedIn ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#triggers
:triggers rdf:type owl:ObjectProperty ;
          rdfs:domain :Process_Step ;
          rdfs:range :Event ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:isDefinedBy "Sending signal from process steps to events is a behavioral relationship that, together with activation relationship, completes event-driven part of the UPMM Core Base. Analysts use this relation to capture and model event occurrences that were triggered by process steps – typical software process example would be event-driven Change Control and Management that could be activated with change occurrence event and the process would internally generate new event and send it as a signal to other tasks to interrupt their execution."@en ;
          rdfs:label "Triggers"@en ;
          rdfs:seeAlso :Event ,
                       :Process_Step ,
                       :sendSignal ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#usedIn
:usedIn rdf:type owl:ObjectProperty ;
        owl:inverseOf :uses ;
        rdfs:domain :Object ;
        rdfs:range :Process ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        rdfs:comment "Sealed"@en ;
        rdfs:label "Is Used In"@en ;
        rdfs:seeAlso :uses ;
        owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#uses
:uses rdf:type owl:ObjectProperty ;
      rdfs:domain :Process ;
      rdfs:range :Object ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      rdfs:comment "Sealed"@en ;
      rdfs:isDefinedBy "Usage of object in a process is a common informational tool for (most frequently) external process observers rather than internal practitioners or process actors; it gives process analysts useful relation for capturing general information about utilization of certain object within executed process in very abstract and high level form. A good example of such approach could be an object of hospital examination form used in the Requirements process that would be actually transformed many times in different sub-processes and tasks of the process, yet customer may not be interested in detailed functional documentation and could prefer only overall context view that clearly states the form is used in the requirements process."@en ;
      rdfs:label "Uses"@en ;
      rdfs:seeAlso :Object ,
                   :Process ,
                   :usedIn ;
      owl:versionInfo "1.0"@en .


#################################################################
#    Data properties
#################################################################

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#acceptance
:acceptance rdf:type owl:DatatypeProperty ;
            rdfs:domain :Process ;
            rdfs:range [ rdf:type rdfs:Datatype ;
                         owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                owl:onDatatype xsd:integer ;
                                                owl:withRestrictions ( [ xsd:minInclusive 0
                                                                       ]
                                                                     )
                                              ]
                                              [ rdf:type rdfs:Datatype ;
                                                owl:onDatatype xsd:integer ;
                                                owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                       ]
                                                                     )
                                              ]
                                            )
                       ] ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:isDefinedBy "This numeric property ranging from 0 to 100 is a type of evolutional information about the process. When used, it should increase in time."@en ;
            rdfs:label "Process Acceptance"@en ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#competence_level
:competence_level rdf:type owl:DatatypeProperty ;
                  owl:equivalentProperty :skill_level ;
                  rdfs:domain :Constraint ;
                  rdfs:range [ rdf:type rdfs:Datatype ;
                               owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                      owl:onDatatype xsd:integer ;
                                                      owl:withRestrictions ( [ xsd:minInclusive 0
                                                                             ]
                                                                           )
                                                    ]
                                                    [ rdf:type rdfs:Datatype ;
                                                      owl:onDatatype xsd:integer ;
                                                      owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                             ]
                                                                           )
                                                    ]
                                                  )
                             ] ;
                  :author """Michael A. Kosinar
Jan Czopik"""^^xsd:Name ;
                  rdfs:comment "Sealed"@en ;
                  rdfs:isDefinedBy "Competence level is a numeric property with values ranging between 0 and 100 and should be used to specify skill level required by given constraint between Competence and Task."@en ;
                  rdfs:label "Competence Level"@en ;
                  rdfs:seeAlso :skill_level ;
                  owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#cost
:cost rdf:type owl:DatatypeProperty ;
      owl:equivalentProperty :expense ,
                             :price ;
      rdfs:domain [ rdf:type owl:Class ;
                    owl:unionOf ( :Artifact
                                  :Process_Step
                                  :Resource
                                )
                  ] ;
      rdfs:range [ rdf:type rdfs:Datatype ;
                   owl:onDatatype xsd:integer ;
                   owl:withRestrictions ( [ xsd:minInclusive 0
                                          ]
                                        )
                 ] ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      rdfs:comment "Sealed"@en ;
      rdfs:isDefinedBy "Numeric attribute used for financial costs determination purposes – allows to adjust price of artifacts, process steps, and resources."@en ;
      rdfs:label "Cost"@en ;
      rdfs:seeAlso :expense ,
                   :price ;
      owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#description
:description rdf:type owl:DatatypeProperty ;
             owl:equivalentProperty :rationale ;
             rdfs:domain :Meta_Model ;
             rdfs:range xsd:string ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:isDefinedBy "Textual property slot used for common description of any UPMM concept."@en ;
             rdfs:label "Description"@en ;
             rdfs:seeAlso :rationale ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#end
:end rdf:type owl:DatatypeProperty ;
     rdfs:domain [ owl:intersectionOf ( :Process_Step
                                        [ rdf:type owl:Class ;
                                          owl:complementOf :Event
                                        ]
                                      ) ;
                   rdf:type owl:Class
                 ] ;
     rdfs:range xsd:dateTime ;
     :author "Michael A. Kosinar"^^xsd:Name ;
     rdfs:comment "Sealed"@en ;
     rdfs:isDefinedBy "Date and time property slots used for determination of processes and tasks start and end times."@en ;
     rdfs:label "End"@en ;
     rdfs:seeAlso :start ;
     owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#expense
:expense rdf:type owl:DatatypeProperty ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:label "Expense"@en ;
         rdfs:seeAlso :cost ,
                      :price ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#expertiseLevel
:expertiseLevel rdf:type owl:DatatypeProperty ;
                rdfs:domain :Human_Resource ;
                rdfs:range xsd:string ;
                :author "Michael A. Kosinar"^^xsd:Name ;
                rdfs:comment "Sealed"@en ;
                rdfs:isDefinedBy "This textual property is reserved for customized expertise levels characteristic for human resources in organizations – typical values are Trainee, Junior, Senior, etc."@en ;
                rdfs:label "Expertise Level"@en ;
                owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#guard
:guard rdf:type owl:DatatypeProperty ;
       rdfs:domain :Cooperation ;
       rdfs:range xsd:string ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       rdfs:comment "Sealed"@en ;
       rdfs:isDefinedBy "Guard is a property slot that bears different form of conditions used for process flow guidance – its original form is textual due to common ability of different systems to convert text to algebraic structures. Conditions could be purely mathematic [x<37] or specified with natural language [use-case model is ready]."@en ;
       rdfs:label "Guard"@en ;
       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#identifier
:identifier rdf:type owl:DatatypeProperty ;
            owl:equivalentProperty :name ;
            rdf:type owl:FunctionalProperty ;
            rdfs:domain :Meta_Model ;
            rdfs:range xsd:string ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:label "Identifier"@en ;
            rdfs:seeAlso :name ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#isAtomicStep
:isAtomicStep rdf:type owl:DatatypeProperty ;
              rdfs:domain :Task ;
              rdfs:range xsd:boolean ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:label "Is Atomic Step"@en ;
              owl:versionInfo "1.0"^^xsd:string .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#language
:language rdf:type owl:DatatypeProperty ;
          rdfs:domain :Entity ;
          rdfs:range xsd:language ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:label "Language"@en ;
          owl:versionInfo "1.0"^^xsd:string .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#location
:location rdf:type owl:DatatypeProperty ;
          rdfs:domain :Context ,
                      :Process_Step ;
          rdfs:range xsd:string ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:label "Location"@en ;
          owl:versionInfo "1.0"^^xsd:string .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#multiple_execution
:multiple_execution rdf:type owl:DatatypeProperty ;
                    rdfs:subPropertyOf :process_execution ;
                    rdfs:domain :Process_Step ;
                    rdfs:range xsd:boolean ;
                    :author "Michael A. Kosinar"^^xsd:Name ;
                    rdfs:comment "Sealed"@en ;
                    rdfs:label "Multiple Execution"@en ;
                    rdfs:seeAlso :process_execution ;
                    owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#name
:name rdf:type owl:DatatypeProperty ;
      rdfs:domain :Meta_Model ;
      rdfs:range xsd:string ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      rdfs:comment "Sealed"@en ;
      rdfs:isDefinedBy "Textual property slot used for common identification of any UPMM concept."@en ;
      rdfs:label "Name"@en ;
      rdfs:seeAlso :identifier ;
      owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#occurredOn
:occurredOn rdf:type owl:DatatypeProperty ;
            rdfs:domain :Event ;
            rdfs:range xsd:dateTime ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:isDefinedBy "This event-driven property provides date and time slot holding information about when happened event-based concepts of UPMM – events and issues."@en ;
            rdfs:label "Occurred On"@en ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#optional_execution
:optional_execution rdf:type owl:DatatypeProperty ;
                    rdfs:subPropertyOf :process_execution ;
                    rdfs:domain :Process_Step ;
                    rdfs:range xsd:boolean ;
                    :author "Michael A. Kosinar"^^xsd:Name ;
                    rdfs:comment "Sealed"@en ;
                    rdfs:label "Optional Execution"@en ;
                    rdfs:seeAlso :process_execution ;
                    owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#performance
:performance rdf:type owl:DatatypeProperty ;
             rdfs:domain :Process ;
             rdfs:range [ rdf:type rdfs:Datatype ;
                          owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:minInclusive 0
                                                                        ]
                                                                      )
                                               ]
                                               [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                        ]
                                                                      )
                                               ]
                                             )
                        ] ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Every process is characterized by different characteristics and one of them is its overall performance – this numeric property is predefined to be used for performance evaluation with values between 0 and 100 with higher values meaning better performance."@en ,
                          "Sealed"@en ;
             rdfs:label "Process Performance"@en ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#planned_execution
:planned_execution rdf:type owl:DatatypeProperty ;
                   rdfs:subPropertyOf :process_execution ;
                   rdfs:domain :Process_Step ;
                   rdfs:range xsd:boolean ;
                   :author "Michael A. Kosinar"^^xsd:Name ;
                   rdfs:comment "Sealed"@en ;
                   rdfs:label "Planned Execution"@en ;
                   rdfs:seeAlso :process_execution ;
                   owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#price
:price rdf:type owl:DatatypeProperty ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       rdfs:comment "Sealed"@en ;
       rdfs:label "Price"@en ;
       rdfs:seeAlso :cost ,
                    :expense ;
       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#priority
:priority rdf:type owl:DatatypeProperty ;
          rdfs:domain :Entity ,
                      :Task ;
          rdfs:range [ rdf:type rdfs:Datatype ;
                       owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                              owl:onDatatype xsd:integer ;
                                              owl:withRestrictions ( [ xsd:minInclusive 0
                                                                     ]
                                                                   )
                                            ]
                                            [ rdf:type rdfs:Datatype ;
                                              owl:onDatatype xsd:integer ;
                                              owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                     ]
                                                                   )
                                            ]
                                          )
                     ] ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Prioritization property with recommended numeric values between 0 (least priority) and 100 (maximum priority)."@en ;
          rdfs:label "Priority"@en ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#process_execution
:process_execution rdf:type owl:DatatypeProperty ;
                   :author "Michael A. Kosinar"^^xsd:Name ;
                   rdfs:comment "Sealed"@en ;
                   rdfs:isDefinedBy "RUP compliant Boolean data property holding execution details about process elements – multiple, optional, or planned execution. Missing values are considered as False."@en ;
                   rdfs:label "Process Execution Information"@en ;
                   rdfs:seeAlso :multiple_execution ,
                                :optional_execution ,
                                :planned_execution ;
                   owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#rationale
:rationale rdf:type owl:DatatypeProperty ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Rationale"@en ;
           rdfs:seeAlso :description ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#readability
:readability rdf:type owl:DatatypeProperty ;
             rdfs:domain :Information ;
             rdfs:range [ rdf:type rdfs:Datatype ;
                          owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:minInclusive 0
                                                                        ]
                                                                      )
                                               ]
                                               [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                        ]
                                                                      )
                                               ]
                                             )
                        ] ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:isDefinedBy "Quality indicator for entity-based concepts ranging numeric values from 0 to 100 where higher value equals higher quality."@en ;
             rdfs:label "Readability"@en ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#regulationCode
:regulationCode rdf:type owl:DatatypeProperty ;
                rdfs:domain :Law ;
                rdfs:range xsd:string ;
                :author "Michael A. Kosinar"^^xsd:Name ;
                rdfs:comment "Sealed"@en ;
                rdfs:isDefinedBy "Textual identification of respective regulation or code mentioned within specific forms of constraints (laws and codes)."@en ;
                rdfs:label "Regulation Code"@en ;
                owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#reusability
:reusability rdf:type owl:DatatypeProperty ;
             rdfs:domain :Process ;
             rdfs:range [ rdf:type rdfs:Datatype ;
                          owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:minInclusive 0
                                                                        ]
                                                                      )
                                               ]
                                               [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                        ]
                                                                      )
                                               ]
                                             )
                        ] ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:isDefinedBy "Yet another process quality indicator, this time reserved for reusability determination purposes. Values range from 0 to 100 where maximum value stands for fully reusable evolved process with no complaints in last improvement iterations."@en ;
             rdfs:label "Reusability"@en ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#skill_level
:skill_level rdf:type owl:DatatypeProperty ;
             rdfs:domain :Constraint ;
             rdfs:range [ rdf:type rdfs:Datatype ;
                          owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:minInclusive 0
                                                                        ]
                                                                      )
                                               ]
                                               [ rdf:type rdfs:Datatype ;
                                                 owl:onDatatype xsd:integer ;
                                                 owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                        ]
                                                                      )
                                               ]
                                             )
                        ] ;
             :author """Michael A. Kosinar
Jan Czopik"""^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:label "Skill Level"@en ;
             rdfs:seeAlso :competence_level ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#start
:start rdf:type owl:DatatypeProperty ;
       rdfs:domain [ owl:intersectionOf ( :Process_Step
                                          [ rdf:type owl:Class ;
                                            owl:complementOf :Event
                                          ]
                                        ) ;
                     rdf:type owl:Class
                   ] ;
       rdfs:range xsd:dateTime ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       rdfs:comment "Sealed"@en ;
       rdfs:isDefinedBy "Date and time property slots used for determination of processes and tasks start and end times."@en ;
       rdfs:label "Start"@en ;
       rdfs:seeAlso :end ;
       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#timeEstimation
:timeEstimation rdf:type owl:DatatypeProperty ;
                rdfs:domain :Process_Step ;
                rdfs:range [ rdf:type rdfs:Datatype ;
                             owl:onDatatype xsd:integer ;
                             owl:withRestrictions ( [ xsd:minInclusive 0
                                                    ]
                                                  )
                           ] ;
                :author "Michael A. Kosinar"^^xsd:Name ;
                rdfs:comment "Sealed"@en ;
                rdfs:isDefinedBy "This numeric property reserves a slot for time estimations, though it is not predefined what units are used, typical approach is to use man-days."@en ;
                rdfs:label "Time Estimation"@en ;
                owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#volatility
:volatility rdf:type owl:DatatypeProperty ;
            rdfs:domain :Entity ;
            rdfs:range [ rdf:type rdfs:Datatype ;
                         owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                owl:onDatatype xsd:integer ;
                                                owl:withRestrictions ( [ xsd:minInclusive 0
                                                                       ]
                                                                     )
                                              ]
                                              [ rdf:type rdfs:Datatype ;
                                                owl:onDatatype xsd:integer ;
                                                owl:withRestrictions ( [ xsd:maxInclusive 100
                                                                       ]
                                                                     )
                                              ]
                                            )
                       ] ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            rdfs:comment "Sealed"@en ;
            rdfs:isDefinedBy "Volatility is an inverse quality indicator with values ranging from 0 to 100 where higher values indicate unstable low-quality results."@en ;
            rdfs:label "Volatility"@en ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#yearsOfExperience
:yearsOfExperience rdf:type owl:DatatypeProperty ;
                   rdfs:domain :Human_Resource ;
                   rdfs:range [ rdf:type rdfs:Datatype ;
                                owl:intersectionOf ( [ rdf:type rdfs:Datatype ;
                                                       owl:onDatatype xsd:integer ;
                                                       owl:withRestrictions ( [ xsd:minInclusive 0
                                                                              ]
                                                                            )
                                                     ]
                                                     [ rdf:type rdfs:Datatype ;
                                                       owl:onDatatype xsd:integer ;
                                                       owl:withRestrictions ( [ xsd:maxInclusive 70
                                                                              ]
                                                                            )
                                                     ]
                                                   )
                              ] ;
                   :author "Michael A. Kosinar"^^xsd:Name ;
                   rdfs:comment "Sealed"@en ;
                   rdfs:isDefinedBy "This numeric property holds typical information about human resource’s experience expressed with years spent in practice."@en ;
                   rdfs:label "Years of Experience"@en ;
                   owl:versionInfo "1.0"@en .


#################################################################
#    Classes
#################################################################

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Action
:Action rdf:type owl:Class ;
        owl:equivalentClass :Task ;
        rdfs:subClassOf :Process_Step ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        rdfs:comment "Sealed"@en ;
        rdfs:label "Action"@en ;
        rdfs:seeAlso :Task ,
                     :Entity ,
                     :Action ,
                     :Artifact ,
                     :Function ,
                     :Information ,
                     :Role ,
                     :Mechanism ,
                     :Process_Role ,
                     :Work_Definition ,
                     :Team ,
                     :Group ;
        owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Activity
:Activity rdf:type owl:Class ;
          owl:equivalentClass :Task ;
          rdfs:subClassOf :Process_Step ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "Activity"@en ;
          rdfs:seeAlso :Task ,
                       :Entity ,
                       :Activity ,
                       :Action ,
                       :Function ,
                       :Artifact ,
                       :Information ,
                       :Role ,
                       :Process_Role ,
                       :Mechanism ,
                       :Team ,
                       :Group ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Activity_Parameter
:Activity_Parameter rdf:type owl:Class ;
                    owl:equivalentClass :Process_Parameter ;
                    rdfs:subClassOf :Parameter ;
                    :author "Michael A. Kosinar"^^xsd:Name ;
                    rdfs:comment "Sealed"@en ;
                    rdfs:label "Activity Parameter"@en ;
                    owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Alternative
:Alternative rdf:type owl:Class ;
             owl:equivalentClass :Task ;
             rdfs:subClassOf :Meta_Model ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             :otherLink "Compatibility of the Alternative is managed with Potts (Alternative) and Process Domain Meta-Model (Alternative)."@en ;
             rdfs:comment "Sealed"@en ;
             rdfs:isDefinedBy "Alternative is bound to Process Dynamics just like the Issue – in this case the connection is analogically realized between Alternative and Task. Process step raises – triggers – an issue; and alternative is then executed as a new task that responds to the raised problem. Once again, just like with Issue, it is convenient to match and map alternatives as separated terms instead of rephrasing the Task to support such a functionality and yet keep distinct relationships with the Process Step."@en ;
             rdfs:label "Alternative"@en ;
             rdfs:seeAlso :Role ,
						  :Issue ,
						  :Problem ,
						  :Mechanism ,
						  :Process_Role ,
						  :Group ,
						  :Team ,
						  :Process_Step ,
						  :Work_Definition ,
						  :Work_Unit ,
						  :Event ,
                          :contributesTo ,
                          :decides ,
                          :respondsTo ,
                          :selects ;
             owl:backwardCompatibleWith """Potts (Alternative)
Process Domain Meta-Model (Alternative)"""@en ;
             owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Argument
:Argument rdf:type owl:Class ;
          rdfs:subClassOf :Meta_Model ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          :otherLink "Argument is compliant, just like Alternative, with Potts (Argument) and Process Domain Meta-Model (Argument)."@en ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Argument, as the last part of the Process Exceptions sub-meta-model, provides independent terminology base for modeling argumentation entities that serve a single purpose – to either support or object an alternative. Its utilization is pretty easy because of the fact the Argument is really very simple and standalone element that is not affected by any other meta-model part."@en ;
          rdfs:label "Argument"@en ;
          rdfs:seeAlso :Alternative ,
                       :objectsTo ,
                       :supports ;
          owl:backwardCompatibleWith """Potts (Argument)
Process Domain Meta-Model (Argument)"""@en ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Artifact
:Artifact rdf:type owl:Class ;
          rdfs:subClassOf :Entity ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "Artifact"@en ;
          rdfs:seeAlso :Artifact ,
                       :Task ,
                       :Activity ,
                       :Action ,
                       :Function ,
                       :Role ,
                       :Mechanism ,
                       :Process_Role ,
                       :Group ,
                       :Team ,
                       :Entity ,
                       :Information ,
                       :Resource ,
                       :Human_Resource ,
                       :Inanimate_Resource ,
                       :Goal ,
                       :Product_Part ,
                       :Work_Product,
                       :Issue ,
                       :Problem ,
                       :Process ,
                       :Phase ,
                       :Object_Parameter ,
                       :Object_Characteristic ,
                       :Context ,
                       :Organization ,
                       :Process_Parameter ,
                       :Activity_Parameter ,
                       :Process_Argument ,
                       :partiallyConsistsOf ;
          owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Competence
:Competence rdf:type owl:Class ;
            rdfs:subClassOf :Meta_Model ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            :otherLink "Competence modeling is compliant with AMENITIES meta-model (Capability), rest of referenced meta-models utilize roles as major term for mapping responsibilities instead."@en ;
            rdfs:comment "Sealed"@en ;
            rdfs:isDefinedBy "Responsibilities are often emphasized as very important part of process modeling with their contextual connection to tasks – they literally put certain conditions on resources that perform the tasks. Our Unified Process Meta-Model, however, distinguish between Competence (responsibility) and process roles that perform tasks – in other words, Tasks are set to be performed by Roles but that doesn’t necessarily mean that competence is granted by specific Role. Reason of this distinction is mainly in simplification of some competences definition – we can pull regulatory, law, and security competences out of all examples as the most obvious, it is easier to keep detailed competences and relate them with roles rather than creating great-er amount of roles with competence-specific attributes, which might lead, in the end, to certain confusion."@en ;
            rdfs:label "Competence"@en ;
            rdfs:seeAlso :Constraint ,
						 :Resource ,
						 :Control ,
						 :Law ,
						 :Human_Resource ,
						 :Inanimate_Resource ,
                         :checks ,
                         :provides ,
                         :specifies ;
            owl:backwardCompatibleWith "AMENITIES (Capability)"@en ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Constraint
:Constraint rdf:type owl:Class ;
            owl:equivalentClass :Law ;
            rdfs:subClassOf :Meta_Model ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            :otherLink """The Constraint terminology base was designed as original term - a specialization of the Argument - to differ Argument from Constraint - they share the same base however Constraint’s primary intention is to limit the process somehow.

Compatibility with other process meta-models:
- NA"""@en ;
            rdfs:comment "Sealed"@en ;
            rdfs:label "Constraint"@en ;
			rdfs:seeAlso :Task ,
			             :Action ,
			             :Activity ,
			             :Function ,
			             :Responsibility ,
						 :Competence ;
            owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Context
:Context rdf:type owl:Class ;
         owl:equivalentClass :Organization ;
         rdfs:subClassOf :Meta_Model ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         :otherLink "Context is compatible with NATURE (Context → Plan Based, Executive Based, Choice Based) and Process Domain Meta-Model (Context, Situation), and while the second is compatible in pretty straightforward way, support of the first went the way of simplification that combined context’s specializa-tions into one Context; this simplification, however, cause no harm to com-patibility as these special contexts might be converted to the Context of Uni-fied Process Meta-Model with the support of specific properties when neces-sary."@en ;
         rdfs:comment "Sealed"@en ;
         rdfs:isDefinedBy """When we talk (in phase of terminology alignment or process capture) about process steps (and processes or tasks in general) and objects used within we actually talk about means executed or used in certain context that describe current situation – a scope – organization is in.
Context is, in Unified Process Meta-Model perspective, to certain extent equivalent with whole organization or department – that is because of terminology unification that simplifies whole terms match-and-map procedure and mitigate risk of any confusion – whether it is a scope, department, domain, or sub-organization all share the same common attributes and can behave exactly like Context to support and concretize processes and objects used within organization. Context, in other words, provide potent tool for specifying different situations in process models that further help with categorization of processes and objects."""@en ;
         rdfs:label "Context"@en ;
         rdfs:seeAlso :Process_Step ,
					  :Context ,
					  :Organization ,
					  :Work_Unit ,
					  :Work_Definition ,
					  :Event ,
					  :Intention ,
					  :Goal ,
					  :Product_Part ,
					  :Work_Product,
					  :Object ,
					  :Resource ,
					  :Human_Resource ,
					  :Inanimate_Resource ,
					  :Entity ,
					  :Artifact ,
					  :Information ,
                      :executes ,
                      :hasSubContext ,
                      :satisfies ;
         owl:backwardCompatibleWith """NATURE (Context → Plan Based, Executive Based, Choice Based)
Process Domain Meta-Model (Context, Situation)"""@en ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Control
:Control rdf:type owl:Class ;
         owl:equivalentClass :Law ;
         rdfs:subClassOf :Meta_Model ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:label "Control"@en ;
         rdfs:seeAlso :Task ,
                      :Action ,
                      :Activity ,
                      :Function ,
                      :Responsibility ,
                      :Competence ;
         owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Cooperation
:Cooperation rdf:type owl:Class ;
             rdfs:subClassOf :Meta_Model ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             :otherLink "Cooperation is compatible with relationships of SPEM, AMENITIES, and Process Domain Meta-Model."@en ;
             rdfs:comment "Sealed"@en ;
             rdfs:isDefinedBy "Separation of two Process Steps cooperation is realized by Cooperation element that is able to fit between (exactly) two Process Steps and identifies the type of cooperation that may be either sequential (process step is followed by or preceded by another process step) or concurrent to each other (one process step is performed in parallel execution with another one); another remarkable type of cooperation is the ability of one Process Step to interrupt execution of different one. Important part of the Cooperation is its ability to guide transitions that realize the cooperation of two steps."@en ;
             rdfs:label "Cooperation"@en ;
             rdfs:seeAlso :Process_Step ,
                          :Event ,
                          :Work_Unit ,
                          :Work_Definition ,
                          :hasSourceStep ,
                          :hasTargetStep ,
                          :interrupts ,
                          :isCoordinatedWith ,
                          :isFollowedBy ,
                          :isParallelWith ,
                          :precedes ;
             owl:backwardCompatibleWith """SPEM work unit relationships
AMENITIES task relationships
Process Domain Meta-Model work unit relationships"""@en ;
             owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Document
:Document rdf:type owl:Class ;
          rdfs:subClassOf :Artifact ;
          owl:disjointWith :Material ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "Document"@en ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Entity
:Entity rdf:type owl:Class ;
        rdfs:subClassOf :Object ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        :otherLink "Entity, Information, and Artifact are compatible with AMENITIES (Artifact, Information Object), NATURE (Product Part), and Process Domain Meta-Model (Product Part). Note that product as used in NATURE and Process Domain Meta-Model might also be considered as Goals under certain model-ing circumstances, but this conflict should be mitigated in the phase of meta-model alignment."@en ;
        rdfs:comment "Sealed"@en ;
        rdfs:isDefinedBy """Entity is the first specialization of the Object in Unified Process Meta-Model and plays major role in process modeling activities – its purpose is to capture and map terminology related to objects entering and leaving tasks, define relation between resources that processes these entities and what roles modify them, and, finally, specify what entities results in certain goals (of the process).
Entity can be further specialized to Information and Artifact where the first named is generic information that can be used for solely informative purposes (like planning, schedules) and thus has mostly supportive role whereas Artifact has more dominant role in the process as an object that is usually connected with con-crete achievements of tasks or whole processes. There is yet another modeling finesse designed within triple Entity – Information – Artifact that allows modeling Artifacts as composites consisting of Information or other Artifacts which is handy in cases of complex documentations."""@en ;
        rdfs:label "Entity"@en ;
        rdfs:seeAlso :Task ,
                     :Role ,
                     :Mechanism ,
                     :Process_Role ,
                     :Action ,
                     :Activity ,
                     :Function ,
                     :Group ,
                     :Team ,
                     :Entity ,
                     :Artifact ,
                     :Information ,
                     :Resource ,
                     :Human_Resource ,
                     :Inanimate_Resource ,
                     :Goal ,
                     :Product_Part ,
                     :Work_Product,
                     :Issue ,
                     :Problem ,
                     :Process ,
                     :Phase ,
                     :Object_Parameter ,
                     :Object_Characteristic ,
                     :Context ,
                     :Organization ,
                     :Process_Parameter ,
                     :Activity_Parameter ,
                     :Process_Argument ,
                     :interactsWith ,
                     :isProcessedBy ,
                     :isProcessedIn ,
                     :partiallyConsistsOf ,
                     :processes ,
                     :resultsIn ,
                     :reviews ,
                     :transforms ;
        owl:backwardCompatibleWith """AMENITIES (Artifact, Information Object)
NATURE (Product Part)
Process Domain Meta-Model (Product Part)"""@en ;
        owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Event
:Event rdf:type owl:Class ;
       owl:equivalentClass :Issue ;
       rdfs:subClassOf :Process_Step ;
       owl:disjointWith :Process ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       :otherLink "Event is compliant with AMENITIES only (Event) but may be matched with and mapped to other meta-models with certain interpretation of Potts’ and Process Domain Meta-Model’s Issue."@en ;
       rdfs:comment "Sealed"@en ;
       rdfs:isDefinedBy "Event is a special version of Process Step that is not performed by someone or something but rather occurs as a result of the real world or any systems actions. Events are, as essential elements of many process installments, part of our meta-model control mechanisms, in this case realized with Event’s ability to trigger Tasks or be fired by Tasks."@en ;
       rdfs:label "Event"@en ;
       rdfs:seeAlso :Process_Step ,
                    :Event ,
                    :Work_Unit ,
                    :Work_Definition ,
       				:Alternative ,
       				:Intention ,
       				:Goal ,
       				:Product_Part ,
       				:Work_Product,
       				:Issue ,
       				:Problem ,
       				:Context ,
       				:Organization ,
       				:Process_Parameter ,
       				:Activity_Parameter ,
       				:Process_Argument ,
                    :isFiredBy ,
                    :triggers ;
       owl:backwardCompatibleWith "AMENITIES (Event)"@en ;
       owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Function
:Function rdf:type owl:Class ;
          owl:equivalentClass :Task ;
          rdfs:subClassOf :Process_Step ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "Function"@en ;
          rdfs:seeAlso  :Task ,
                        :Entity ,
                        :Action ,
                        :Activity ,
                        :Function ,
                        :Artifact ,
                        :Information ,
                        :Role ,
                        :Mechanism ,
                        :Process_Role ,
                        :Team ,
                        :Group ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Goal
:Goal rdf:type owl:Class ;
      owl:equivalentClass :Product_Part ,
                          :Work_Product ;
      rdfs:subClassOf :Intention ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      :otherLink "Goal is compliant with SPEM (Work Product), NATURE (Product Part), and Process Domain Meta-Model (Work Product)."@en ,
                 """SPEM (Work Product)
NATURE (Product Part)
Process Domain Meta-Model (Work Product)"""@en ;
      rdfs:comment "Sealed"@en ;
      rdfs:isDefinedBy "See Intention for more details."@en ;
      rdfs:label "Goal"@en ;
      rdfs:seeAlso :Process ,
				   :Entity ,
				   :Phase ,
				   :Artifact ,
				   :Information ,
				   :Intention ,
				   :Goal ,
				   :Product_Part ,
				   :Work_Product,
                   :Context ,
                   :Organization ,
                   :concretizes ,
                   :isRealizedBy ,
                   :realizes ,
                   :resultsIn ;
      owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Group
:Group rdf:type owl:Class ;
       owl:equivalentClass :Team ;
       rdfs:subClassOf :Role ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       :otherLink "Group is not compatible with any considered meta-model, at lest not directly – certain unnatural compatibility can be arranged with AMENITIES meta-model, yet, only with extra mapping of actors to roles."@en ;
       rdfs:comment "Sealed" ;
       rdfs:isDefinedBy "Group is directly influenced by, and also dependent on process role that defines group as a set of various positions that are played by resources in organizations. Even though some meta-models approach groups as sets of resources our approach goes a different way – mostly due to certain deflection from process conceptual level to process execution – take a group of concrete resources (identified by name) and group of roles classifiers as an example and inspiration to model groups as role-playing elements instead of capturing resource-centric information that might change periodically. Group is a specialization of the Role – not only it shares the same attributes but may be also treated like Role; in other words it can behave like any other role. The main relationship of Group with Role is realized with whole-part relation where group is, naturally, the whole."@en ;
       rdfs:label "Group"@en ;
       rdfs:seeAlso :Role ,
                    :Group ,
                    :Team ,
                    :Mechanism ,
                    :Process_Role ,
       				:Task ,
       				:Function ,
       				:Activity ,
       				:Action ,
       				:Object ,
       				:Resource ,
       				:Human_Resource ,
       				:Inanimate_Resource ,
       				:Entity ,
       				:Artifact ,
       				:Information ,
       				:Alternative ,
                    :consistsOf ;
       owl:backwardCompatibleWith "NA"@en ;
       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Guard
:Guard rdf:type owl:Class ;
       rdfs:subClassOf :Meta_Model ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       :otherLink """The Guard terminology base was designed to unify modeling of different constraints notation usually paired with the Cooperation and is present in the meta-model only to ensure full process meta-model knowledge profile - hence it's fully compatible with any process meta-model able to capture dynamic relationships with flow constraints like:
- AMENITIES
- SPEM"""^^xsd:string ;
       rdfs:label "Guard"@en ;
       rdfs:seeAlso :Cooperation ;
       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Human_Resource
:Human_Resource rdf:type owl:Class ;
                rdfs:subClassOf :Resource ;
                :author "Michael A. Kosinar"^^xsd:Name ;
                rdfs:comment "Sealed"@en ;
                rdfs:label "Human Resource"@en ;
                rdfs:seeAlso :Competence ,
                             :Role ,
                             :Responsibility ,
                             :Mechanism ,
                             :Process_Role ,
                             :Entity ,
                             :Artifact ,
                             :Information ,
                             :Process ,
                             :Phase ,
                             :Object_Parameter ,
                             :Object_Characteristic ,
                             :Group ,
                             :Team ,
                             :Context ,
                             :Organization ,
                             :Process_Parameter ,
                             :Activity_Parameter ,
                             :Process_Argument ,
							 :Human_Resource ,
                             :isOrganizedWith ;
                owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Inanimate_Resource
:Inanimate_Resource rdf:type owl:Class ;
                    rdfs:subClassOf :Resource ;
                    :author "Michael A. Kosinar"^^xsd:Name ;
                    rdfs:comment "Sealed"@en ;
                    rdfs:label "Inanimate Resource"@en ;
                    rdfs:seeAlso  :Competence ,
                                  :Role ,
                                  :Responsibility ,
                                  :Mechanism ,
                                  :Process_Role ,
                                  :Entity ,
                                  :Artifact ,
                                  :Information ,
                                  :Process ,
                                  :Phase ,
                                  :Object_Parameter ,
                                  :Object_Characteristic ,
                                  :Group ,
                                  :Team ,
                                  :Context ,
                                  :Organization ,
                                  :Process_Argument ,
                                  :Activity_Parameter ,
                                  :Process_Parameter ;
                    owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Information
:Information rdf:type owl:Class ;
             rdfs:subClassOf :Entity ;
             :author "Michael A. Kosinar"^^xsd:Name ;
             rdfs:comment "Sealed"@en ;
             rdfs:label "Information"@en ;
             rdfs:seeAlso  :Task ,
                           :Role ,
                           :Mechanism ,
                           :Process_Role ,
                           :Action ,
                           :Function ,
                           :Activity ,
                           :Entity ,
                           :Artifact ,
                           :Information ,
                           :Resource ,
                           :Human_Resource ,
                           :Inanimate_Resource ,
                           :Goal ,
                           :Product_Part ,
                           :Work_Product,
                           :Issue ,
                           :Problem ,
                           :Process ,
                           :Phase ,
                           :Object_Parameter ,
                           :Object_Characteristic ,
                           :Group ,
                           :Team ,
                           :Context ,
                           :Organization ,
                           :Process_Argument ,
                           :Activity_Parameter ,
                           :Process_Parameter ;
             owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Intention
:Intention rdf:type owl:Class ;
           rdfs:subClassOf :Meta_Model ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           :otherLink "Intention is compatible with NATURE (Intention) and Process Domain Meta-Model (Intention)."@en ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy "Intention provides terminology base for capturing intentional aspects of process representations with matching high-level process intentions that are satisfied within various contexts. Intention might be easily confused with goals that define required achievement on process’ low-level intentions – to avoid a lack of clarity in matching goals and intentions in process capture the Unified Process Meta-Model approaches goals as a specialization of the Intention; i.e. Goal is a concretization of Intention that brings more detail into achievement modeling and yet sustain mutual compatibility that leaves convenient room for modeling context-intentional process aspects."@en ;
           rdfs:label "Intention"@en ;
           rdfs:seeAlso :Goal ,
						:Context ,
						:Product_Part ,
						:Work_Product,
						:Organization ,
                        :concretizes ,
                        :hasSource ,
                        :hasTarget ,
                        :satisfies ;
           owl:backwardCompatibleWith """NATURE (Intention)
Process Domain Meta-Model (Intention)"""@en ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Issue
:Issue rdf:type owl:Class ;
       owl:equivalentClass :Problem ;
       rdfs:subClassOf :Meta_Model ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       :otherLink "Issue is compatible with Potts (Issue) and Process Domain Meta-Model (Issue)."@en ;
       rdfs:comment "Sealed"@en ;
       rdfs:isDefinedBy "Issue allows to capture and model problems that may be triggered by executed process steps in case of unexpected and exceptional states of the executed process instance. It is a crucial fact to mention that Issue (or Problem) acts like a specialization of Event of Process Dynamics of the meta-model – that is because of shared characteristics they have in common in relation with the Task element; this equivalency actually brings Issue to Process Dynamics level, hence it can be really considered as a behavioral aspect that enables process analyst to model problematic states instead of overloading other meta-model elements."@en ;
       rdfs:label "Issue"@en ;
       rdfs:seeAlso :Process_Step ,
					:Alternative ,
					:Event ,
					:Work_Unit ,
					:Work_Definition ,
					:Entity ,
					:Artifact ,
					:Information ,
                    :raises ,
                    :respondsTo ,
                    :reviews ;
       owl:backwardCompatibleWith """Potts (Issue)
Process Domain Meta-Model (Issue)"""@en ;
       owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Law
:Law rdf:type owl:Class ;
     rdfs:subClassOf :Meta_Model ;
     :author "Michael A. Kosinar"^^xsd:Name ;
     :otherLink "Law is, without further transformations, compatible only with AMENITIES meta-model; other meta-models can be considered compatible as well if we used one-way mapping of elements like strategy or condition. These elements are present in Potts, NATURE, and Process Domain meta-models but as none of them were originally designed to support this kind of control it’s unlikely that such need would occur."@en ;
     rdfs:comment "Sealed"@en ;
     rdfs:isDefinedBy "Law is, in correct combination with competencies, another process control mechanism supported by our meta-model. Its application is not that usual and spread as with the aforementioned form of process roles, many organizations, however, deal with activities that are affected by regulations or laws applicable in a region or a country of organization’s or customer’s origin. Explicitly defined regulations improve readability and informational value of process models and help with future process audits. Usual law applications in processes are, for example, personal data protection law (that regulates treatment of sensitive data), critical infrastructure (that defines and affects systems of very high importance), and quality standards (that limit or control behavior of activities). Noticeable fact is that Law may control (or limit) any captured Task but any form of control must be performed by a resource (imagine process control performed without actual control) – this relation was discussed already and is realized by Competence."@en ;
     rdfs:label "Law"@en ;
     rdfs:seeAlso :Task ,
                  :Action ,
                  :Activity ,
                  :Function ,
                  :Competence ,
                  :Responsibility ,
                  :checks ,
                  :controls ;
     owl:backwardCompatibleWith "AMENITIES (Law)"@en ;
     owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Material
:Material rdf:type owl:Class ;
          rdfs:subClassOf :Artifact ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          rdfs:comment "Sealed"@en ;
          rdfs:label "Material"@en ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Mechanism
:Mechanism rdf:type owl:Class ;
           owl:equivalentClass :Role ;
           rdfs:subClassOf :Meta_Model ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Mechanism"@en ;
           rdfs:seeAlso  :Group ,
                         :Task ,
                         :Team ,
                         :Action ,
                         :Function ,
                         :Activity ,
                         :Object ,
                         :Resource ,
                         :Human_Resource ,
                         :Inanimate_Resource ,
                         :Entity ,
                         :Artifact ,
                         :Information ,
                         :Alternative ,
                         :Competence ,
                         :Responsibility ;
           owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Meta_Model
:Meta_Model rdf:type owl:Class ;
            :author "Michael A. Kosinar"^^xsd:Name ;
            :otherLink """The Unified Process Meta-Model had been derived of various process meta-models to comprise maximum compatibility and compliance with:
- SPEM
- NATURE
- AMENITIES
- Domain Process Meta-Model (Hug)
- Potts
- Workflow Management Coalition Process Ontology"""^^xsd:string ;
            rdfs:isDefinedBy "Process Meta-Model consists of all base terminology that is necessary for business or software process architecture. The Unified Process Meta-Model was designed to comply with various process meta-models that had been proposed and used in software process community. More on other models compatibility is defined in traceability annotation."^^xsd:string ;
            rdfs:label "Unified Process Meta-Model"@en ;
            owl:versionInfo "1.0"^^xsd:string .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Object
:Object rdf:type owl:Class ;
        rdfs:subClassOf :Meta_Model ;
        :author "Michael A. Kosinar"^^xsd:Name ;
        :rupLink "Object is not directly compliant with any referenced meta-model – it was designed to generalize common attributes of different terms like Actor, Artifact (AMENITIES) and improve modeling of structural process aspects."@en ;
        rdfs:comment "Sealed"@en ;
        rdfs:isDefinedBy "Object is, by definition, an entity of the real world that is unique, identifiable and is characterized by its behavior. Our meta-model reuses this ‘generic object’ concept to define another base terminology of software processes. Base Object concept is utilized in the meta-model in almost the same approach as Process Step in process dynamics context – it serves as a base for process related Entities and Resources and defines common behavior and relations that are inherited by all specializations."@en ;
        rdfs:label "Object"@en ;
        rdfs:seeAlso :Process ,
					 :Object_Parameter ,
					 :Object_Characteristic ,
					 :Role ,
					 :Phase ,
					 :Mechanism ,
					 :Process_Role ,
					 :Group ,
					 :Team ,
					 :Context ,
					 :Organization ,
					 :Entity ,
					 :Artifact ,
					 :Information ,
					 :Process_Argument ,
					 :Activity_Parameter ,
					 :Process_Parameter ,
                     :has ,
                     :usedIn ,
                     :uses ;
        owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Object_Characteristic
:Object_Characteristic rdf:type owl:Class ;
                       owl:equivalentClass :Object_Parameter ;
                       rdfs:subClassOf :Parameter ;
                       :author "Michael A. Kosinar"^^xsd:Name ;
                       rdfs:comment "Sealed"@en ;
                       rdfs:label "Object Characteristic"@en ;
                       rdfs:seeAlso :Object_Parameter ;
                       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Object_Parameter
:Object_Parameter rdf:type owl:Class ;
                  rdfs:subClassOf :Parameter ;
                  :author "Michael A. Kosinar"^^xsd:Name ;
                  rdfs:comment "Sealed"@en ;
                  rdfs:label "Object Parameter"@en ;
                  rdfs:seeAlso :has ;
                  owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Organization
:Organization rdf:type owl:Class ;
              owl:equivalentClass :Scope ;
              rdfs:subClassOf :Meta_Model ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Organization"@en ;
              rdfs:seeAlso  :Process_Step ,
                            :Context ,
                            :Organization ,
                            :Work_Unit ,
                            :Work_Definition ,
                            :Event ,
                            :Intention ,
                            :Goal ,
                            :Product_Part ,
                            :Work_Product,
                            :Object ,
                            :Resource ,
                            :Human_Resource ,
                            :Inanimate_Resource ,
                            :Entity ,
                            :Artifact ,
                            :Information ;
              owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Parameter
:Parameter rdf:type owl:Class ;
           rdfs:subClassOf :Meta_Model ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           :otherLink "Dynamic Properties Analytical Pattern"@en ;
           rdfs:comment "Sealed"@en ;
           rdfs:isDefinedBy """Unified Process Meta-Model can be extended and refined to support various properties in Process Dynamics and Process Resources sub-parts – two specific meta-model elements can be used to achieve that and these are, namely, Process Parameter and Object Parameter.
Both of these parameters are incorporated into the meta-model in a way adopted from analytical pattern known as dynamic properties – such attribute allows flexible refinement of two abstract elements – Process Step and Object. Parameters, with their n-ary relationships with base terms, can be dynamically typed (for example Process Step can be extended with new text-based rationale property) or even limited (imagine a property of quality assurance indicator with positive integers values between zero and hundred)."""@en ;
           rdfs:label "Parameter"@en ;
           owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Phase
:Phase rdf:type owl:Class ;
       owl:equivalentClass :Process ;
       rdfs:subClassOf :Process_Step ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       rdfs:comment "Sealed"@en ;
       rdfs:label "Phase"@en ;
       rdfs:seeAlso :Process ,
                    :Goal ,
                    :Phase ,
                    :Product_Part ,
                    :Work_Product,
                    :Process_Step ,
                    :Work_Unit ,
                    :Work_Definition ,
                    :Event ,
                    :Object ,
                    :Resource ,
                    :Human_Resource ,
                    :Inanimate_Resource ,
                    :Entity ,
                    :Artifact ,
                    :Information ;
       owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Problem
:Problem rdf:type owl:Class ;
         rdfs:subClassOf :Meta_Model ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         rdfs:comment "Sealed"@en ;
         rdfs:label "Problem"@en ;
         rdfs:seeAlso :Process_Step ,
                      :Alternative ,
                      :Event ,
                      :Work_Unit ,
                      :Work_Definition ,
                      :Entity ,
                      :Artifact ,
                      :Information ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Process
:Process rdf:type owl:Class ;
         rdfs:subClassOf :Process_Step ;
         owl:disjointWith :Task ;
         :author "Michael A. Kosinar"^^xsd:Name ;
         :otherLink "Process is compatible with Workflow Management Coalition Process Ontology (Process Specification and Sub-process), SPEM (Phase), AMENITIES (Task, sic!); Potts, NATURE, and Process Domain Meta-Model prefer focus on elementary tasks instead."@en ;
         rdfs:comment "Sealed"@en ;
         rdfs:isDefinedBy "Process is yet another specialization of Process Step, but, unlike Task, is able to describe high level processes (on lower process granularity) and hierarchically decompose process as a whole that consists of other Process Steps, i.e. other Processes, Events, and Tasks. Its main terminological reason is to map all processes and respective sub-processes including possible capture of collaboration relationships between independent processes like their mutual support (not to be mistaken which cooperation of two processes defined by different cooperation element)."@en ;
         rdfs:label "Process"@en ;
         rdfs:seeAlso :Process ,
					  :Goal ,
					  :Phase ,
					  :Product_Part ,
					  :Process_Step ,
					  :Work_Product,
					  :Work_Unit ,
					  :Work_Definition ,
					  :Event ,
					  :Object ,
					  :Resource ,
					  :Human_Resource ,
					  :Inanimate_Resource ,
					  :Entity ,
					  :Artifact ,
					  :Information ,
					  :Task ,
                      :collaborates ,
                      :isRealizedBy ,
                      :parentProcess ,
                      :realizes ,
                      :usedIn ,
                      :uses ;
         owl:backwardCompatibleWith """Workflow Management Coalition Process Ontology (Process Specification and Sub-process)
SPEM (Phase)
AMENITIES (Task)"""@en ;
         owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Process_Argument
:Process_Argument rdf:type owl:Class ;
                  owl:equivalentClass :Process_Parameter ;
                  rdfs:subClassOf :Parameter ;
                  :author "Michael A. Kosinar"^^xsd:Name ;
                  rdfs:comment "Sealed"@en ;
                  rdfs:label "Process Argument"@en ;
                  owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Process_Parameter
:Process_Parameter rdf:type owl:Class ;
                   rdfs:subClassOf :Parameter ;
                   :author "Michael A. Kosinar"^^xsd:Name ;
                   rdfs:comment "Sealed"@en ;
                   rdfs:label "Process Parameter"@en ;
                   rdfs:seeAlso :has ;
                   owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Process_Role
:Process_Role rdf:type owl:Class ;
              owl:equivalentClass :Role ;
              rdfs:subClassOf :Meta_Model ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Process Role"@en ;
              rdfs:seeAlso :Group ,
                           :Task ,
                           :Team ,
                           :Action ,
                           :Function ,
                           :Activity ,
                           :Object ,
                           :Resource ,
                           :Human_Resource ,
                           :Inanimate_Resource ,
                           :Entity ,
                           :Artifact ,
                           :Information ,
                           :Alternative ,
                           :Competence ,
                           :Responsibility ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Process_Step
:Process_Step rdf:type owl:Class ;
              owl:equivalentClass :Work_Definition ,
                                  :Work_Unit ;
              rdfs:subClassOf :Meta_Model ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              :otherLink "Process Step is compliant with Workflow Management Coalition Process Ontology (triple Process – Sub-process – Activity), SPEM (Work Definition), AMENITIES (triple Task – Cooperative Task – Work Unit), Process Domain Meta-Model (Work Unit), Potts (Step), and NATURE (Action); last three should be remapped to specific type when aligning with UPMM elements."@en ;
              rdfs:comment "Sealed"@en ;
              rdfs:isDefinedBy "Process Step is a core of the meta-model and connects all major process elements together as an abstract form of work definition that is executed within an organization. Main reason to keep the Process Step abstract is due to further specialization of Process Step to different types of work definitions that occurs in real process representations (sub-processes, elementary tasks, real life events, etc.). It is recommended to use this meta-model element only in special occasions like extending model with properties or relationships (in meta-model alignment phase) that should be inherited in other specializations of Process Step."@en ;
              rdfs:label "Process Step"@en ;
              rdfs:seeAlso :Event ,
						   :Alternative ,
						   :Intention ,
						   :Goal ,
						   :Product_Part ,
						   :Work_Product,
						   :Process ,
						   :Process_Step ,
						   :Work_Definition ,
						   :Work_Unit ,
						   :Issue ,
						   :Problem ,
						   :Context ,
						   :Organization ,
						   :Process_Parameter ,
						   :Activity_Parameter ,
						   :Process_Argument ,
                           :contributesTo ,
                           :decides ,
                           :executes ,
                           :has ,
                           :hasSource ,
                           :hasTarget ,
                           :isCoordinatedWith ,
                           :parentProcess ,
                           :raises ;
              owl:backwardCompatibleWith """Workflow Management Coalition Process Ontology (triple Process – Sub-process – Activity)
SPEM (Work Definition)
AMENITIES (triple Task – Cooperative Task – Work Unit)
Process Domain Meta-Model (Work Unit)
Potts (Step)
NATURE (Action)"""@en ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Product_Part
:Product_Part rdf:type owl:Class ;
              rdfs:subClassOf :Meta_Model ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Product Part"@en ;
              rdfs:seeAlso  :Process ,
                            :Entity ,
                            :Phase ,
                           	:Artifact ,
                           	:Information ,
                           	:Intention ,
                           	:Goal ,
                           	:Product_Part ,
                           	:Work_Product,
                            :Context ,
                            :Organization ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Resource
:Resource rdf:type owl:Class ;
          rdfs:subClassOf :Object ;
          :author "Michael A. Kosinar"^^xsd:Name ;
          :otherLink "Resources comply with Workflow Management Coalition Process Ontology (Resources) and AMENITIES (Actor)."@en ;
          rdfs:comment "Sealed"@en ;
          rdfs:isDefinedBy "Other meta-model definitions mention Resources many times, and, quite unsurprisingly, it’s a resource that is critical for process representation - Resource is a kind of object (the second important specialization) that provides modeling of various resources in organizations that are either human (employees, externalists) or inanimate (tools, software tools, test devices). In more general Resource context is necessary to model role-playing relation of a resource to its roles, specific compe-tences that are provided by the resource, and qualification to process certain entities."@en ;
          rdfs:label "Resource"@en ;
          rdfs:seeAlso :Competence ,
					   :Role ,
					   :Mechanism ,
					   :Process_Role ,
					   :Responsibility ,
					   :Entity ,
					   :Artifact ,
					   :Information ,
					   :Process ,
					   :Phase ,
                       :Object_Parameter ,
                       :Object_Characteristic ,
                       :Group ,
                       :Team ,
                       :Context ,
                       :Organization ,
                       :Process_Parameter ,
                       :Activity_Parameter ,
                       :Process_Argument ,
                       :isProcessedBy ,
                       :plays ,
                       :provides ;
          owl:backwardCompatibleWith """Workflow Management Coalition Process Ontology (Resources)
AMENITIES (Actor)"""@en ;
          owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Responsibility
:Responsibility rdf:type owl:Class ;
                owl:equivalentClass :Role ;
                rdfs:subClassOf :Meta_Model ;
                rdfs:comment "Sealed"@en ;
                rdfs:label "Responsibility"@en ;
                rdfs:seeAlso :Constraint ,
                             :Resource ,
                             :Control ,
                             :Law ,
                             :Human_Resource ,
                             :Inanimate_Resource ;
                owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Role
:Role rdf:type owl:Class ;
      rdfs:subClassOf :Meta_Model ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      :otherLink "Role is compliant with Workflow Management Coalition Process Ontology (Role), SPEM (Process Role), AMENITIES (Role), and Process Domain Meta-Model (Role)."@en ;
      rdfs:comment "Sealed"@en ;
      rdfs:isDefinedBy "Role is, compared to Competence, more straightforward form of capturing different (usually human) resources positions in an organization. We have already outlined the motivation of keeping Competence separated from Role – while Competence defines a responsibility of a resource, role is sort of role-playing scenarios that are related to Task they perform; in other words, resource plays a role so it (he/she) can perform a task and resource may provide a competence that is further specified by the role (imagine a Business Analyst role that further specifies optional Compe-tence of regulation analysis in area of personal data protection that is regulated by law, hence not every business analyst has to have the competence but when he/she does it can be feasible modeled as Role – Competence relation). Role is also a great tool to define other relationships including those connected with objects used in processes and may be also used as a base for composing groups or teams of various roles."@en ;
      rdfs:label "Role"@en ;
      rdfs:seeAlso :Group ,
				   :Task ,
				   :Team ,
				   :Action ,
				   :Function ,
				   :Activity ,
				   :Object ,
				   :Resource ,
				   :Human_Resource ,
				   :Inanimate_Resource ,
				   :Entity ,
				   :Artifact ,
				   :Information ,
				   :Alternative ,
				   :Competence ,
				   :Responsibility ,
                   :consistsOf ,
                   :performs ,
                   :plays ,
                   :selects ,
                   :specifies ;
      owl:backwardCompatibleWith """Workflow Management Coalition Process Ontology (Role)
SPEM (Process Role)
AMENITIES (Role)
Process Domain Meta-Model (Role)."""@en ;
      owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Scope
:Scope rdf:type owl:Class ;
       rdfs:subClassOf :Meta_Model ;
       :author "Michael A. Kosinar"^^xsd:Name ;
       rdfs:comment "Sealed"@en ;
       rdfs:label "Scope"@en ;
       owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Task
:Task rdf:type owl:Class ;
      owl:equivalentClass :step ;
      rdfs:subClassOf :Process_Step ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      :otherLink "Task is compatible with Workflow Management Coalition Process Ontology (Activity), SPEM (Activity), AMENITIES (Action), Process Domain Meta-Model (Work Unit), Potts (Step), and NATURE (Action)."@en ;
      rdfs:comment "Sealed"@en ;
      rdfs:isDefinedBy "Task is the most basic specialization of Process Step and provides terminology alignment of simple activities performed within organizations and fits very specific lower levels of process granularity. Noticeable fact of our Task definition is that it is not naturally atomic but may consist of other activities of the same type (but without ability to behave like process) – it was designed this way to comply with the RUP terminology and process decomposition that combines atomic tasks within task definitions; atomic activities are, as a result, identified with special property slot."@en ;
      rdfs:label "Task"@en ;
      rdfs:seeAlso :Task ,
				   :Entity ,
				   :Action ,
				   :Function ,
				   :Activity ,
				   :Artifact ,
				   :Information ,
				   :Role ,
				   :Process_Role ,
				   :Mechanism ,
				   :Group ,
				   :Team ,
				   :Process ,
                   :controls ,
                   :isFiredBy ,
                   :performs ,
                   :processes ,
                   :transforms ,
                   :triggers ;
      owl:backwardCompatibleWith """Workflow Management Coalition Process Ontology (Activity)
SPEM (Activity)
AMENITIES (Action)
Process Domain Meta-Model (Work Unit)
Potts (Step)
NATURE (Action)"""@en ;
      owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Team
:Team rdf:type owl:Class ;
      rdfs:subClassOf :Role ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      rdfs:comment "Sealed"@en ;
      rdfs:label "Team"@en ;
      rdfs:seeAlso  :Role ,
                    :Group ,
                    :Mechanism ,
                    :Process_Role ,
                    :Team ,
                    :Task ,
                    :Function ,
                    :Activity ,
                    :Action ,
                    :Object ,
                    :Resource ,
                    :Human_Resource ,
                    :Inanimate_Resource ,
                    :Entity ,
                    :Artifact ,
                    :Information ,
                    :Alternative ;
      owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Work_Definition
:Work_Definition rdf:type owl:Class ;
                 rdfs:subClassOf :Meta_Model ;
                 :author "Michael A. Kosinar"^^xsd:Name ;
                 rdfs:comment "Sealed"@en ;
                 rdfs:label "Work Definition"@en ;
                 rdfs:seeAlso :Event ,
                              :Alternative ,
                              :Intention ,
                              :Goal ,
                              :Product_Part ,
                              :Work_Product,
                              :Process_Step ,
                              :Work_Unit ,
                              :Work_Definition ,
                              :Issue ,
                              :Problem ,
                              :Context ,
                              :Organization ,
                              :Process_Parameter ,
                              :Activity_Parameter ,
                              :Process_Argument ;
                 owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Work_Product
:Work_Product rdf:type owl:Class ;
              rdfs:subClassOf :Meta_Model ;
              :author "Michael A. Kosinar"^^xsd:Name ;
              rdfs:comment "Sealed"@en ;
              rdfs:label "Work Product"@en ;
              rdfs:seeAlso  :Process ,
                            :Entity ,
                            :Phase ,
                            :Artifact ,
                            :Information ,
                            :Intention ,
                            :Goal ,
                            :Product_Part ,
                            :Work_Product,
                            :Context ,
                            :Organization ;
              owl:versionInfo "1.0"@en .


###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#Work_Unit
:Work_Unit rdf:type owl:Class ;
           rdfs:subClassOf :Meta_Model ,
                           :Process_Step ;
           :author "Michael A. Kosinar"^^xsd:Name ;
           rdfs:comment "Sealed"@en ;
           rdfs:label "Work Unit"@en ;
           rdfs:seeAlso  :Event ,
                         :Alternative ,
                         :Intention ,
                         :Goal ,
                         :Product_Part ,
                         :Work_Product,
                         :Process_Step ,
                         :Work_Definition ,
                         :Work_Unit ,
                         :Issue ,
                         :Problem ,
                         :Context ,
                         :Organization ,
                         :Process_Parameter ,
                         :Activity_Parameter ,
                         :Process_Argument ;
           owl:versionInfo "1.0"@en .

###  http://www.kosinar.me/ontologies/UnifiedProcessMetaModel#step
:step rdf:type owl:Class ;
      rdfs:subClassOf :Process_Step ;
      :author "Michael A. Kosinar"^^xsd:Name ;
      rdfs:comment "Sealed"@en ;
      rdfs:label "Step"@en ;
      owl:versionInfo "1.0"@en .


#################################################################
#    Annotations
#################################################################

owl:deprecated rdfs:label "Deprecated"@en .


owl:incompatibleWith rdfs:label "Directly Incompatible With"@en .


owl:priorVersion rdfs:label "Prior Version"@en .


###  Generated by the OWL API (version 4.5.13) https://github.com/owlcs/owlapi
